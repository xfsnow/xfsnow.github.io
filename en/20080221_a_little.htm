<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>Snowpeak Blog</title><meta name="description" content="Sharing and discussing cutting-edge technologies of AI and cloud computing, and other interesting topics."><meta name="keywords" content="AI, GitHub Copilot, Azure Cloud, Cloud Computing, Front-end Technology, Back-end Technology, Web Development, Software Engineering"><link rel="stylesheet" href="/assets/css/style.min.css"><link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/default.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js"></script></head><body><nav class="navbar"><div class="nav-container"><div class="nav-logo"><h2><i class="fas fa-snowflake"></i> Snowpeak</h2></div><div class="nav-menu"><a href="/en/" class="nav-link">Home</a><a href="/en/page_1.htm" class="nav-link">Article</a><a href="/en#tools" class="nav-link">Tools</a><a href="/en/about.htm" class="nav-link">About</a><a href="/" class="nav-link lang-switch"><i class="fas fa-globe"></i> 简体中文</a></div><div class="nav-toggle" id="mobile-menu"><span class="bar"></span><span class="bar"></span><span class="bar"></span></div></div></nav><header class="article-header"><div class="container"><h1>A Little Lottery Made with JavaScript</h1><div class="article-meta"><span><i class="fas fa-calendar"></i> Published: 2008-02-21 14:37:00</span><span><i class="fas fa-clock"></i> Reading time: 17 minutes </span><span><i class="fas fa-tag"></i> Category: Frontend</span></div></div></header><main class="article-container"><h2>Task</h2><p>Before the Spring Festival, the company held a party with a lottery segment. The lottery consists of several rounds, each drawing a different number of people, and those who are drawn do not participate in subsequent lotteries.</p><h2>Analysis</h2><p>Since development was done on my own computer, but at the party site it needed to be placed on a dedicated machine connected to a projector, cross-platform compatibility was required. Employee data for the party might be adjusted frequently until the day of the event, so it was also necessary to easily interface with employee source data. Eventually, JavaScript was chosen as a purely client-side language that can run with just IE, and the display effects can be fully supported by CSS, allowing for a beautiful interface.</p><h2>Environment</h2><p>IE 6+</p><h2>Solution</h2><p>Employee data is stored separately in a text file and read using IE's Scripting.FileSystemObject;</p><p>Employee data needs to display three items: ID, name, and department name, so the text file is saved as tab-delimited data from Excel, and JavaScript is used to output it as a table; Since it's for projection display, it's all made keyboard-controlled, capturing key events with document.onkeypress; For random array sorting, JavaScript has a very convenient built-in method: array.sort(function(){return Math.random()&gt;0.5?-1:1;});</p><h2>Code</h2><p>employ.txt</p><p>External data for employees are like following:</p> <pre><code>12009 name1 department1
15971 name2 department2
7815 name3 department3
9483 name4 department4
9507 name5 department5
10589 name6 department6
17212 name7 department7
15487 name8 department8
14934 name9 department9
</code></pre> <h2>Page</h2><p>lottery.htm</p><p>```html</p><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>Lottery</title><style type="text/css"> body { overflow: hidden; background-image: url(bg.jpg); background-repeat: no-repeat; font-family: Arial, sans-serif; } h1 { margin-top: 130px; font-size: 40px; color: #FF0000; } #showlot { font-size: 30px; font-weight: bold; color: #FF0000; } #showlot td { width: 200px; } </style><script type="text/javascript"></script></head><body><h1 align="center">Good luck for your fortune</h1><div id="showlot"></div><script language="JavaScript" type="text/javascript"> // Check if an element exists in the array function inArray(arr,key) { re = new RegExp(key,[""]); return (arr.toString().replace(re,"┢").replace(/[^,┢]/g,"")).indexOf("┢"); } // JavaScript implementation of a small lottery program. Read data from an external text file into an array, // randomly sort the array and display it in input fields with CSS-styled borders removed, // controlled by buttons to start and stop, with each cycle restarting from the beginning after reaching the end of the array. // Since setInterval is used to control the function, mostly global variables are used. var fso, ts, str; var arrayUser = new Array(); // Record the number of people drawn in each batch in an array var arrayBatch = new Array(10, 10, 10, 10, 10, 10, 10, 10,10, 10, 10, 10, 4, 2, 1, 1, 1, 1, 1, 1, 1); var indexBatch = 0; var ForReading = 1; // Physical path to the text file - double backslashes are required because JavaScript uses / as an escape character, so // represents /. str = 'D://lucky//employ.txt'; fso = new ActiveXObject("Scripting.FileSystemObject"); ts = fso.OpenTextFile(str, ForReading); var i = 0; // Read file content line by line into the array while (!ts.AtEndOfStream) { arrayUser[i++] = ts.ReadLine(); } // Close the file ts.Close(); // Initially shuffle the array arrayUser.sort(function(){return Math.random()>0.5?-1:1;}); // Timer is a pointer variable to control the loop. The actual shuffling is of array elements, // meaning the array is reshuffled each cycle, causing the corresponding keys to be reshuffled! // Time always goes from 0 to array length. timer = 0; str = ""; var arrayLine = new Array(); var arrayNow = new Array(); function lottery() { // When the remaining array elements are not enough for this batch, restart from the beginning // (this makes the last few people in each round have slightly fewer chances), // reshuffling each time when restarting. Need to use >= for comparison. if (timer >= (arrayUser.length-arrayBatch[indexBatch]) ) { timer = 0; // Let the sort comparison function randomly return -1 or 1. // For other sorting methods, other comparison functions can be used, // http://webuc.net/dotey/archive/2004/12/06/2354.aspx and http://blog.iyi.cn/hily/archives/2005/09/javascript.html arrayUser.sort(function(){return Math.random()>0.5?-1:1;}); } else { str=""; arrayNow = new Array(); for (i = 0; i < arrayBatch[indexBatch]; i++) { arrayLine = arrayUser[timer].split("/t");//arrayUser[0][0] is employee ID, arrayUser[0][1] is name, arrayUser[0][2] is department arrayNow[i] = arrayUser[timer]; // Record the current winner being displayed str+="<tr><td>"+arrayLine[0]+"</td><td>"+arrayLine[1]+"</td><td>"+arrayLine[2]+"</td></tr>"; timer++; } str = '<table align="center">'+str+'</table>'; document.getElementById("showlot").innerHTML = str; } } // Larger numbers mean slower speed var speed=50; // Record the winners var winIndex = 0; var arrayWin = new Array(); document.onkeypress=function() { // c key is 99, clear display; p key is 112, start; s key is 115, stop. if (window.event.keyCode == 99) { // Since each batch has a different number of people, clear the current batch display // to prevent the last few people from previous batches with more people from always showing in the back slots for (i = 0; i < 10; i++) { str= ""; document.getElementById("showlot").innerHTML =""; } } else if (window.event.keyCode == 112) { // Since each batch has a different number of people, clear the current batch display // to prevent the last few people from previous batches with more people from always showing in the back slots for (i = 0; i < 10; i++) { str= ""; document.getElementById("showlot").innerHTML =""; } MyMar=setInterval(lottery, speed); } else if (window.event.keyCode == 115) { // Stop running first clearInterval(MyMar); // Record the current winners into the overall winner array. // This could be simplified to remove current winners from the overall user array each time it stops, // but recording in the overall winner array now is convenient for future expansion to display all winners at the end. for (i = 0; i < arrayBatch[indexBatch]; i++) { arrayWin[winIndex] = arrayNow[i]; winIndex++; } // JavaScript doesn't have a built-in function to remove array elements. // Since the array is shuffled each time, the array keys are unpredictable, // so it's easier to loop through and remove the values of the drawn people by value comparison. // Loop once, skip when encountering the value of a drawn person, and record the rest. var j = 0; var arrayNextpool = new Array(); for (i=0; i< arrayUser.length; i++) { // Remove winners from the overall list if (inArray(arrayWin, arrayUser[i]) >= 0) { continue; } else arrayNextpool[j++] = arrayUser[i]; } arrayUser = arrayNextpool; indexBatch++;// Move to the next batch timer = 0; // After stopping, prepare to restart the cycle } } </script></body></html><hr><p><em>Original link: https://www.snowpeak.fun/en/article/detail/a_little_lottery_made_with_javascript/</em></p></main><footer class="footer"><div class="container"><div class="footer-content"><div class="footer-section"><h3><i class="fas fa-snowflake"></i> Snowpeak</h3><p>Sharing and discussing cutting-edge technologies of AI and cloud computing, and other interesting topics.</p><div class="social-links"><div class="social-platforms"><a href="https://github.com/xfsnow" target="_blank" class="social-link"><i class="fab fa-github"></i></a><a href="https://snowpeak.blog.csdn.net/" target="_blank" class="social-link"><i class="fas fa-blog"></i></a><a href="https://space.bilibili.com/701839928" target="_blank" class="social-link"><i class="fab fa-bilibili"></i></a><a href="https://www.linkedin.com/in/snowpeak" target="_blank" class="social-link"><i class="fab fa-linkedin"></i></a></div><div class="wechat-section"><div class="wechat-info"><span class="wechat-label">WeChat Account</span><span class="wechat-name">Tech Warm Life</span></div><img src="/assets/img/techwarm.jpg" alt="Tech Warm Life" class="wechat-qr"></div></div></div><div class="footer-section"><h4>Quick Links</h4><ul><li><a href="/#articles">Article</a></li><li><a href="/#tools">Tools</a></li><li><a href="https://docs.github.com/en/pages" target="_blank">GitHub Pages</a></li></ul></div><div class="footer-section"><h4>Tech Stack</h4><ul><li>Python</li><li>GitHub Copilot</li><li>Claude Sonnet 4</li><li>HTML/CSS/JS</li><li>Responsive Design</li></ul></div></div><div class="footer-bottom"><p>Copyright &copy; 2013-<script>document.write((new Date()).getFullYear());</script> Snowpeak Blog. Running on GitHub Pages. <a href="https://beian.miit.gov.cn" target="_blank" class="icp_beian">京ICP备2021007720号</a><a href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010502052523" target="_blank" class="gongan_beian">京公网安备11010502052523号</a></p></div></div></footer><script src="/en/index.js"></script><script src="/assets/js/blog.min.js"></script><script>hljs.highlightAll();</script></body></html>