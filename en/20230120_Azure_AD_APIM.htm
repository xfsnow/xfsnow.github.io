<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>Snowpeak Blog</title><meta name="description" content="Sharing and discussing cutting-edge technologies of AI and cloud computing, and other interesting topics."><meta name="keywords" content="AI, GitHub Copilot, Azure Cloud, Cloud Computing, Front-end Technology, Back-end Technology, Web Development, Software Engineering"><link rel="stylesheet" href="/assets/css/style.min.css"><link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/default.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js"></script></head><body><nav class="navbar"><div class="nav-container"><div class="nav-logo"><h2><i class="fas fa-snowflake"></i> Snowpeak</h2></div><div class="nav-menu"><a href="/en/" class="nav-link">Home</a><a href="/en/page_1.htm" class="nav-link">Article</a><a href="/en#tools" class="nav-link">Tools</a><a href="/en/about.htm" class="nav-link">About</a><a href="/" class="nav-link lang-switch"><i class="fas fa-globe"></i> 简体中文</a></div><div class="nav-toggle" id="mobile-menu"><span class="bar"></span><span class="bar"></span><span class="bar"></span></div></div></nav><header class="article-header"><div class="container"><h1>Protecting API Management APIs with Azure AD OAuth 2.0</h1><div class="article-meta"><span><i class="fas fa-calendar"></i> Published: 2023-01-20 10:00:00</span><span><i class="fas fa-clock"></i> Reading time: 20 minutes </span><span><i class="fas fa-tag"></i> Category: Azure</span></div></div></header><main class="article-container"><p>Azure API Management is a hosted API gateway service on Microsoft Azure cloud with comprehensive API management capabilities. In terms of security, it can be tightly integrated with Azure Active Directory to provide client OAuth 2.0 authentication mechanisms. The official documentation is somewhat brief, so this article provides detailed explanations of the authentication mechanism and configuration process.</p><h2>Core Mechanism</h2><p>Register 2 applications in Azure AD: one corresponding to the API created in API Management, and one corresponding to the client application accessing the API. In Azure AD, authorize the client application to access the backend API. Associate the API in API Management with the backend application in Azure AD. Finally, use the client application to request an access token to access the backend API.</p><p>This article will not elaborate on creating APIs in API Management. If needed, please refer to the official documentation https://docs.microsoft.com/en-us/azure/api-management/add-api-manually. Here we directly use an API that has already been deployed in API Management.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_01.png"></p><p>For simplicity, we set this API to not require a subscription key, i.e., uncheck "Subscription required" in Settings. This way, the API currently has no restrictions and can be accessed directly. Like:</p> <pre><code class="language-bash">curl https://contonso.azure-api.cn/contonso/name?name=test
{&quot;message&quot;: &quot;Hello, test! Welcome to Azure Function!&quot;, &quot;timestamp&quot;: &quot;2022-09-04, 14:35:34&quot;}
</code></pre> <p>Below we will add OAuth 2.0 token to this API to protect it.</p><h2>Azure AD Deployment</h2><h3>Register Azure AD Application for Backend API</h3><p>In the Azure console, go to Azure Active Directory and select App Registrations. Click "New registration" on the right side. Enter a meaningful name, for example, we name it "name-backend" here. Select Web for Redirect URI, keep other defaults, and click the Register button.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_08.png"></p><p>After successful creation, on the Overview page, record the Application (client) ID of this application. As shown here:</p> <pre><code class="language-plaintext">Display name: name-backend
Application (client) ID: 95ac855d-724d-4bf7-95b1-93244f4e2e5b
</code></pre> <p>In the left navigation links under the Manage section, click "Expose an API", then click the "Set" link on the right side of Application ID URI.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_09.png"></p><p>Use the default value and click the Save button to save.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_10.png"></p><p>Also record this Application ID URI.</p><p>In the Manage section, click "App roles" then click "Create app role".</p><p>Display name: Enter a meaningful name, such as Reader.</p><p>Allowed member types: Select Applications</p><p>Value: Enter a meaningful value, such as Read</p><p>Description: Enter a meaningful value, such as "Readers have rights to read."</p><p>Do you want to enable this app role?: Check this.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_11.png"></p><p>Finally click Apply to save.</p><p>Set the version of returned token</p><p>In the left navigation menu under Manage, click Manifest, find accessTokenAcceptedVersion in the right main pane, and set its value to 2.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_12.png"></p><p>This step is very important because JWT in API Management only supports version 2.0 format. If this value is not modified, the token publisher URL format parsed from the JWT token obtained by calling the Azure AD interface will be incorrect, and subsequent verification will not pass.</p><h3>Register Azure AD Application for Client</h3><p>In the Azure console, go to Azure Active Directory and select App Registrations. Click "New registration" on the right side. Enter a meaningful name, for example, we name it "name-client" here. Select Web for Redirect URI, keep other defaults, and click the Register button.</p><p>After successful creation, on the Overview page, record the Application (client) ID value of this application. As shown here:</p> <pre><code class="language-plaintext">Display name: name-client
Application (client) ID: 6bfe51f7-ea34-4096-aa7c-7e8df1043bbd
</code></pre> <p>Create a secret for this client application. In the left navigation menu under Manage, click "Certificates &amp; secrets". Under "New client secret", click "New client secret". In the popup layer, enter "name-client" for Description, then click the Add button below to add.</p><p>When the addition is complete, you must copy and save the secret value when it's displayed for the first time, as it will no longer be displayed after refreshing the page. If you don't save it in time, you can only delete it and create a new one.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_13.png"></p><h3>Grant Permissions to Applications in Azure AD</h3><p>In Azure AD's App registrations, select the client application just created, and click "API permissions" under the Manage section in the left navigation. In the right pane, click "Add a permission". Select the backend application "name-backend" we created earlier.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_14.png"></p><p>Then select "Application permissions" and select the role we have already created below. Click "Add permissions".</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_15.png"></p><p>This will return to the Configured permissions list, and the Status column will be blank.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_02.png"></p><p>Click <code>Grant admin consent for &lt;your-tenant-name&gt;</code>, click Yes in the popup. Then the Status column should show a green checkmark.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_03.png"></p><h2>Configure JWT Policy in API Management</h2><p>First go to the Overview page of the Azure AD console and record the current Tenant ID.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_04.png"></p><p>Prepare the Open ID URL. When using Azure global regions, this URL pattern is:</p> <pre><code>https://login.microsoftonline.com/{Tenant-ID}/v2.0/.well-known/openid-configuration
</code></pre> <p>When using Azure China regions, this URL pattern is:</p> <pre><code>https://login.partner.microsoftonline.cn/{Tenant-ID}/v2.0/.well-known/openid-configuration
</code></pre> <p>In the API Management console, open the API we have prepared. In the Design interface, click "Add policy" for Inbound policy.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_05.png"></p><p>Scroll down and select "Validate JWT".</p><p>Enter "Authorization" for Header name.</p><p>Enter "Unauthorized. Access token is missing or invalid." for Failed validation error message.</p><p>Click "Add claim", enter "aud" for name. Then click "Add value", enter the client ID of the backend application registered in Azure AD that we recorded earlier for Values.</p><p>Click "Add Open ID URL", enter the Open ID URL prepared earlier. Click the Save button at the bottom to save.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_06.png"></p><p>At this point, enabling OAuth 2.0 authentication for the API is complete. Now when we directly access this API, it returns an authentication failure error.</p> <pre><code class="language-bash">curl https://snowpeak.azure-api.cn/contonso/name
{ &quot;statusCode&quot;: 401, &quot;message&quot;: &quot;Unauthorized. Access token is missing or invalid.&quot; }
</code></pre> <h2>Verification and Testing</h2><h3>Obtain Access Token Using Client Application in Azure AD</h3><p>We use the standard OAuth 2.0 flow to organize the request. Use the Azure AD Tenant ID mentioned earlier to organize the target address. When using Azure global regions, the target address is:</p> <pre><code>https://login.microsoftonline.com/{Tenant-ID}/oauth2/v2.0/token
</code></pre> <p>When using Azure China regions, the target address is:</p> <pre><code>https://login.partner.microsoftonline.cn/{Tenant-ID}/oauth2/v2.0/token
</code></pre> <p>Parameter descriptions are as follows:</p><table><thead><tr><th>Parameter Name</th><th>Parameter Value</th></tr></thead><tbody><tr><td>grant_type</td><td>client_credentials</td></tr><tr><td>client_id</td><td>The Application (client) ID of the client application mentioned earlier, such as 6bfe51f7-ea34-4096-aa7c-7e8df1043bbd</td></tr><tr><td>client_secret</td><td>The secret of the client application mentioned earlier, such as Lz36Zrilxa~01234567890#ABCDEFGH</td></tr><tr><td>Scope</td><td>Organized with the backend application ID in the format {backend-application-Application-ID}/.default, such as 95ac855d-724d-4bf7-95b1-93244f4e2e5b/.default</td></tr></tbody></table><p>After organizing the request address and parameters, we send the request with curl and get a response. Note to add a <code>Content-Type: application/x-www-form-urlencoded</code> request header.</p> <pre><code class="language-bash">curl -X POST -H &quot;Content-Type: application/x-www-form-urlencoded&quot; -d
'client_id=6bfe51f7-ea34-4096-aa7c-7e8df1043bbd&amp;client_secret=Lz36Zrilxa~pB3d6LAewX~33~6rWREFLC.&amp;scope=95ac855d-724d-4bf7-95b1-93244f4e2e5b/.default&amp;grant_type=client_credentials'
'https://login.partner.microsoftonline.cn/78c60b1a-3a93-4e0e-99ad-00dc772cfb6f/oauth2/v2.0/token'

{&quot;token_type&quot;:&quot;Bearer&quot;,&quot;expires_in&quot;:3599,&quot;ext_expires_in&quot;:3599,&quot;access_token&quot;:&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Il9DSkFPdHlzWVZtNXhjMVlvSzBvUTdxeUJDUSJ9.eyJhdWQiOiI5NWFj......&quot;}
</code></pre> <p>Open <a href="https://jwt.ms/">https://jwt.ms/</a> in a browser and let's parse the returned access_token.</p><p><img alt="" src="../assets/img/20230120_Azure_AD_APIM_07.png"></p><p>You can see the detailed token information parsed, where "iss" is the token publisher's URL. This is the effect of setting accessTokenAcceptedVersion to 2 for the backend application earlier.</p><p>Finally, we add the request header and access the API that now has authentication enabled.</p> <pre><code class="language-bash">curl -H 'Authorization: Bearer
eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzIlvSzBvUTdxeUJDUSJ9.eyJhdWQiOiI......'
'https://snowpeak.azure-api.cn/contonso/name?name=test'
{&quot;message&quot;: &quot;Hello, test! Welcome to Azure Function!&quot;, &quot;timestamp&quot;: &quot;2022-09-05, 07:50:57&quot;}
</code></pre> <p>You can see that it passed verification and returned normal results.</p></main><footer class="footer"><div class="container"><div class="footer-content"><div class="footer-section"><h3><i class="fas fa-snowflake"></i> Snowpeak</h3><p>Sharing and discussing cutting-edge technologies of AI and cloud computing, and other interesting topics.</p><div class="social-links"><div class="social-platforms"><a href="https://github.com/xfsnow" target="_blank" class="social-link"><i class="fab fa-github"></i></a><a href="https://snowpeak.blog.csdn.net/" target="_blank" class="social-link"><i class="fas fa-blog"></i></a><a href="https://space.bilibili.com/701839928" target="_blank" class="social-link"><i class="fab fa-bilibili"></i></a><a href="https://www.linkedin.com/in/snowpeak" target="_blank" class="social-link"><i class="fab fa-linkedin"></i></a></div><div class="wechat-section"><div class="wechat-info"><span class="wechat-label">WeChat Account</span><span class="wechat-name">Tech Warm Life</span></div><img src="/assets/img/techwarm.jpg" alt="Tech Warm Life" class="wechat-qr"></div></div></div><div class="footer-section"><h4>Quick Links</h4><ul><li><a href="/#articles">Article</a></li><li><a href="/#tools">Tools</a></li><li><a href="https://docs.github.com/en/pages" target="_blank">GitHub Pages</a></li></ul></div><div class="footer-section"><h4>Tech Stack</h4><ul><li>Python</li><li>GitHub Copilot</li><li>Claude Sonnet 4</li><li>HTML/CSS/JS</li><li>Responsive Design</li></ul></div></div><div class="footer-bottom"><p>Copyright &copy; 2013-<script>document.write((new Date()).getFullYear());</script> Snowpeak Blog. Running on GitHub Pages. <a href="https://beian.miit.gov.cn" target="_blank" class="icp_beian">京ICP备2021007720号</a><a href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010502052523" target="_blank" class="gongan_beian">京公网安备11010502052523号</a></p></div></div></footer><script src="/en/index.js"></script><script src="/assets/js/blog.min.js"></script><script>hljs.highlightAll();</script></body></html>