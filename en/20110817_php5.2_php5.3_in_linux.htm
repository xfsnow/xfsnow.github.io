<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>Snowpeak Blog</title><meta name="description" content="Sharing and discussing cutting-edge technologies of AI and cloud computing, and other interesting topics."><meta name="keywords" content="AI, GitHub Copilot, Azure Cloud, Cloud Computing, Front-end Technology, Back-end Technology, Web Development, Software Engineering"><link rel="stylesheet" href="/assets/css/style.min.css"><link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/default.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js"></script></head><body><nav class="navbar"><div class="nav-container"><div class="nav-logo"><h2><i class="fas fa-snowflake"></i> Snowpeak</h2></div><div class="nav-menu"><a href="/en/" class="nav-link">Home</a><a href="/en/page_1.htm" class="nav-link">Article</a><a href="/en#tools" class="nav-link">Tools</a><a href="/en/about.htm" class="nav-link">About</a><a href="/" class="nav-link lang-switch"><i class="fas fa-globe"></i> 简体中文</a></div><div class="nav-toggle" id="mobile-menu"><span class="bar"></span><span class="bar"></span><span class="bar"></span></div></div></nav><header class="article-header"><div class="container"><h1>Installing PHP 5.2 and PHP 5.3 on the Same Linux System</h1><div class="article-meta"><span><i class="fas fa-calendar"></i> Published: 2011-08-17 17:08:00</span><span><i class="fas fa-clock"></i> Reading time: 11 minutes </span><span><i class="fas fa-tag"></i> Category: System</span></div></div></header><main class="article-container"><p>Recently, while upgrading from PHP 5.2 to PHP 5.3, I needed to install both PHP 5.2 and PHP 5.3 on the same Linux machine. Through exploration, I summarized a solution that simplifies installation and configuration, and makes it convenient to switch between the two versions.</p><p>The test Linux system is Fedora 14, initially installed with Apache 2.0.64 and PHP 5.2.6, installed in the following paths:</p> <pre><code>/usr/local/apache2
/usr/local/php5
</code></pre> <p>Now we want to install PHP 5.3 while preserving the existing PHP 5.2. Ideally, both versions should be able to share the existing Apache 2. Considering that PHP also needs to run from the command line (without going through Apache), this involves system environment variables, so we'll start by preparing the environment variables.</p><h2>1. Create a soft link to avoid modifying environment variables when switching PHP versions</h2><p>This way, we only need to modify the soft link when switching versions.</p> <pre><code class="language-bash"># mkdir -p /usr/php/
# ln -s /usr/local/php5 /usr/php/default
</code></pre> <p>Then add to system environment variables:</p> <pre><code class="language-bash"># vi /etc/profiles
</code></pre> <p>Add a line at the beginning of the file:</p> <pre><code class="language-bash">PHP_HOME=/usr/php/default
</code></pre> <p>Find the <code>PATH=</code> line and add PHP_HOME to it, for example:</p> <pre><code class="language-bash">PATH=$JAVA_HOME/bin:$PATH:$PHP_HOME/bin:$MYSQL_HOME/bin
</code></pre> <p>Exit the command line window and reopen it to make the environment variables take effect, then execute:</p> <pre><code class="language-bash">$ php -version
</code></pre> <p>If it outputs something like <code>PHP 5.2.6 (cli)</code>, the soft link and environment variables are set up correctly.</p><h2>2. Backup the PHP 5.2 module for Apache</h2><p>Find the <code>libphp5.so</code> file in <code>/usr/local/apache2/modules</code>, which should be the module compiled during the existing PHP 5.2 installation. Rename it as a backup to facilitate compiling a new PHP module when installing PHP 5.3 below.</p> <pre><code class="language-bash"># mv libphp5.so libphp526.so
</code></pre> <h2>3. Compile and install PHP 5.3</h2><p>Specific configurations can be chosen as needed, just make sure the installation path is different from the existing PHP 5.2 path. For example, if the existing PHP 5.2 path is <code>/usr/local/php5</code>, then when compiling PHP 5.3:</p> <pre><code class="language-bash">./configure --prefix=/usr/local/php53 --with-apxs2=/usr/local/apache2/bin/apxs
</code></pre> <ul><li><code>--prefix=/usr/local/php53</code> indicates that the new PHP 5.3 will be installed in the <code>/usr/local/php53</code> path</li><li><code>--with-apxs2=/usr/local/apache2/bin/apxs</code> indicates that the existing apache2 will still be used for compilation and configuration</li></ul><p>After compilation and installation, many files will be generated in <code>/usr/local/php53</code>, and a new <code>libphp5.so</code> will be generated in <code>/usr/local/apache2/modules</code>. Comparing file sizes, it should be much larger than the backed up <code>libphp526.so</code>.</p><h2>4. Configure Apache2 to support different PHP versions</h2><p>First, stop the apache service.</p><p>Edit httpd.conf and find:</p> <pre><code class="language-apache">LoadModule php5_module modules/libphp5.so
</code></pre> <p>Delete this line and add the following section:</p> <pre><code class="language-apache">&lt;IfDefine php53&gt;
LoadModule php5_module modules/libphp5.so
&lt;/IfDefine&gt;
&lt;IfDefine php526&gt;
LoadModule php5_module modules/libphp526.so
&lt;/IfDefine&gt;
</code></pre> <p>Then start apache with the -D parameter, for example:</p> <pre><code class="language-bash">/usr/local/apache2/bin/apachectl -D php53 -k start
</code></pre> <p>Apache will call the <code>&lt;IfDefine php53&gt;</code> section in httpd.conf and load the new PHP 5.3 libphp5.so. Similarly, if:</p> <pre><code class="language-bash">/usr/local/apache2/bin/apachectl -D php526 -k start
</code></pre> <p>Apache will call the <code>&lt;IfDefine php526&gt;</code> section in httpd.conf and load the backup PHP 5.2 libphp526.so.</p><p>Open a phpinfo() information page in your browser to check the PHP information. You should see information for different PHP versions.</p><h2>5. Update the PHP path soft link</h2><p>To install PHP extensions and let the command line execute the new PHP 5.3 version, we just need to update the soft link for the PHP path.</p> <pre><code class="language-bash"># rm -f /usr/php/default;
# ln -s /usr/local/php53 /usr/php/default
</code></pre> <p>Then execute in the command line:</p> <pre><code class="language-bash">$ php -version
</code></pre> <p>If it outputs something like <code>PHP 5.3.6 (cli)</code>, the soft link and environment variables now support the new version.</p><p>Then when compiling and installing PHP extensions, you can directly use phpize without specifying the absolute path for PHP 5.3.</p><h2>6. Switching PHP versions</h2><p>To summarize the above operations, to use PHP 5.3, point <code>/usr/php/default</code> to <code>/usr/local/php53</code>, and start Apache with:</p> <pre><code class="language-bash">/usr/local/apache2/bin/apachectl -D php53 -k start
</code></pre> <p>To use PHP 5.2, point <code>/usr/php/default</code> to <code>/usr/local/php5</code>, and start Apache with:</p> <pre><code class="language-bash">/usr/local/apache2/bin/apachectl -D php526 -k start
</code></pre> <hr><p><em>Original Link: https://www.snowpeak.fun/en/article/detail/install_php_52_and_php_53_in_same_linux/</em></p></main><footer class="footer"><div class="container"><div class="footer-content"><div class="footer-section"><h3><i class="fas fa-snowflake"></i> Snowpeak</h3><p>Sharing and discussing cutting-edge technologies of AI and cloud computing, and other interesting topics.</p><div class="social-links"><div class="social-platforms"><a href="https://github.com/xfsnow" target="_blank" class="social-link"><i class="fab fa-github"></i></a><a href="https://snowpeak.blog.csdn.net/" target="_blank" class="social-link"><i class="fas fa-blog"></i></a><a href="https://space.bilibili.com/701839928" target="_blank" class="social-link"><i class="fab fa-bilibili"></i></a><a href="https://www.linkedin.com/in/snowpeak" target="_blank" class="social-link"><i class="fab fa-linkedin"></i></a></div><div class="wechat-section"><div class="wechat-info"><span class="wechat-label">WeChat Account</span><span class="wechat-name">Tech Warm Life</span></div><img src="/assets/img/techwarm.jpg" alt="Tech Warm Life" class="wechat-qr"></div></div></div><div class="footer-section"><h4>Quick Links</h4><ul><li><a href="/#articles">Article</a></li><li><a href="/#tools">Tools</a></li><li><a href="https://docs.github.com/en/pages" target="_blank">GitHub Pages</a></li></ul></div><div class="footer-section"><h4>Tech Stack</h4><ul><li>Python</li><li>GitHub Copilot</li><li>Claude Sonnet 4</li><li>HTML/CSS/JS</li><li>Responsive Design</li></ul></div></div><div class="footer-bottom"><p>Copyright &copy; 2013-<script>document.write((new Date()).getFullYear());</script> Snowpeak Blog. Running on GitHub Pages. <a href="https://beian.miit.gov.cn" target="_blank" class="icp_beian">京ICP备2021007720号</a><a href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010502052523" target="_blank" class="gongan_beian">京公网安备11010502052523号</a></p></div></div></footer><script src="/en/index.js"></script><script src="/assets/js/blog.min.js"></script><script>hljs.highlightAll();</script></body></html>