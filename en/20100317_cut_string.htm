<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>Snowpeak Blog</title><meta name="description" content="Sharing and discussing cutting-edge technologies of AI and cloud computing, and other interesting topics."><meta name="keywords" content="AI, GitHub Copilot, Azure Cloud, Cloud Computing, Front-end Technology, Back-end Technology, Web Development, Software Engineering"><link rel="stylesheet" href="/assets/css/style.min.css"><link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/default.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js"></script></head><body><nav class="navbar"><div class="nav-container"><div class="nav-logo"><h2><i class="fas fa-snowflake"></i> Snowpeak</h2></div><div class="nav-menu"><a href="/en/" class="nav-link">Home</a><a href="/en/page_1.htm" class="nav-link">Article</a><a href="/en#tools" class="nav-link">Tools</a><a href="/en/about.htm" class="nav-link">About</a><a href="/" class="nav-link lang-switch"><i class="fas fa-globe"></i> 简体中文</a></div><div class="nav-toggle" id="mobile-menu"><span class="bar"></span><span class="bar"></span><span class="bar"></span></div></div></nav><header class="article-header"><div class="container"><h1>Cut String with Chinese by Byte in Java</h1><div class="article-meta"><span><i class="fas fa-calendar"></i> Published: 2010-03-17 13:06:00</span><span><i class="fas fa-clock"></i> Reading time: 7 minutes </span><span><i class="fas fa-tag"></i> Category: Backend</span></div></div></header><main class="article-container"><p>There are many discussions online about solutions for truncating strings containing Chinese characters by bytes. Here I present my own approach. The basic principle is still to count whether the number of bytes representing Chinese characters in the bytes to be extracted is even, i.e., whether it exactly includes complete Chinese characters.</p><h2>Source Code</h2> <pre><code class="language-java">/**
 * Programming: Write a function to truncate a string, taking a string and byte count as input, and outputting the byte-truncated string. However, ensure that Chinese characters are not half-truncated. For example, &quot;我ABC&quot; with 4 bytes should be truncated to &quot;我AB&quot;, and &quot;我ABC汉DEF&quot; with 6 bytes should output &quot;我ABC&quot; rather than &quot;我ABC+half of 汉&quot;.
 * According to the above rules, input &quot;我ABC汉DEF 1&quot; should return an empty string, not &quot;我&quot;.
 */
public class CutMultibyte {

 public static String cutMultibyte(String splitStr, int extract) {
  byte[] bytes = splitStr.getBytes();
  //If the number of bytes to extract is not less than the original bytes, return the original string directly. Note that the byte count must use bytes.length, using the string's length() method returns the character count!
  if (extract &gt;= bytes.length) {
   return splitStr;
  }
  else {
   int result = 0;
   int cutLength = 0;
   //Count how many bytes in the bytes to be extracted are negative
   for (int i = 0; i &lt; extract; i++) {
    if (bytes[i] &lt; 0) {
     cutLength++;
    }
   }
   //If the number of negative bytes is even, meaning the bytes to extract contain exactly complete Chinese characters, the extraction byte count remains unchanged; otherwise, if the number of negative bytes is odd, it means incomplete Chinese characters are encountered, and the extraction byte count is reduced by 1.
   if (cutLength % 2 == 0) {
    result = extract;
   }
   else {
    result = extract - 1;
   }
   String substrx = new String(bytes, 0, result);
   return substrx;
  }
 }


 public static void main(String args[]) {
  String str = args[0];
  int num = Integer.valueOf(args[1]);
  str = cutMultibyte(str, num);
  System.out.println(str);
 }
}
</code></pre> <h2>Implementation Principle</h2><p>The core idea of this solution is based on the characteristic that Chinese characters in UTF-8 encoding occupy multiple bytes and each byte is negative:</p><ol><li>Convert the string to a byte array</li><li>Count the number of negative bytes in the byte range to be extracted</li><li>If the number of negative bytes is even, it indicates that the extraction range contains complete Chinese characters</li><li>If the number of negative bytes is odd, it indicates that the extraction range contains incomplete Chinese characters, and one byte needs to be subtracted to ensure character integrity</li></ol><h2>Usage</h2><ol><li>Call the <code>cutMultibyte(String splitStr, int extract)</code> method</li><li>Pass in the string to be truncated and the byte count</li><li>The method will return a byte-truncated string without breaking Chinese characters</li></ol><hr><p><em>Original link: https://www.snowpeak.fun/en/article/detail/cut_string_with_chinese_by_byte_in_java/</em></p></main><footer class="footer"><div class="container"><div class="footer-content"><div class="footer-section"><h3><i class="fas fa-snowflake"></i> Snowpeak</h3><p>Sharing and discussing cutting-edge technologies of AI and cloud computing, and other interesting topics.</p><div class="social-links"><div class="social-platforms"><a href="https://github.com/xfsnow" target="_blank" class="social-link"><i class="fab fa-github"></i></a><a href="https://snowpeak.blog.csdn.net/" target="_blank" class="social-link"><i class="fas fa-blog"></i></a><a href="https://space.bilibili.com/701839928" target="_blank" class="social-link"><i class="fab fa-bilibili"></i></a><a href="https://www.linkedin.com/in/snowpeak" target="_blank" class="social-link"><i class="fab fa-linkedin"></i></a></div><div class="wechat-section"><div class="wechat-info"><span class="wechat-label">WeChat Account</span><span class="wechat-name">Tech Warm Life</span></div><img src="/assets/img/techwarm.jpg" alt="Tech Warm Life" class="wechat-qr"></div></div></div><div class="footer-section"><h4>Quick Links</h4><ul><li><a href="/#articles">Article</a></li><li><a href="/#tools">Tools</a></li><li><a href="https://docs.github.com/en/pages" target="_blank">GitHub Pages</a></li></ul></div><div class="footer-section"><h4>Tech Stack</h4><ul><li>Python</li><li>GitHub Copilot</li><li>Claude Sonnet 4</li><li>HTML/CSS/JS</li><li>Responsive Design</li></ul></div></div><div class="footer-bottom"><p>Copyright &copy; 2013-<script>document.write((new Date()).getFullYear());</script> Snowpeak Blog. Running on GitHub Pages. <a href="https://beian.miit.gov.cn" target="_blank" class="icp_beian">京ICP备2021007720号</a><a href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010502052523" target="_blank" class="gongan_beian">京公网安备11010502052523号</a></p></div></div></footer><script src="/en/index.js"></script><script src="/assets/js/blog.min.js"></script><script>hljs.highlightAll();</script></body></html>