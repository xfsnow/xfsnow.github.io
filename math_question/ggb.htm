<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8"/>
  <title>ChatGGB</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"/>
  <link rel="stylesheet" href="ggb.css"/>
  <!-- 使用 GeoGebra 的标准部署版本 -->
  <script src="https://cdn.geogebra.org/apps/deployggb.js"></script>
  <script src="ggb.js"></script>
</head>
<body>
  <div class="container">
    <div class="ggb-panel">
      <h2 class="ggb-title">和AI聊聊天，用GeoGebra画图形</h2>
      <div id="ggb-element"></div>
      <div class="button-group">
        <button id="settings-btn" class="settings-btn">⚙️ 设置</button>
        <a href="ChatGGB_Guide.html" target="_blank" class="guide-link">使用指南</a>
      </div>

      <div id="settings-panel" class="settings-panel">
        <div class="settings-header">
          <h3>设置</h3>
          <button id="close-settings" class="close-settings-btn">✕</button>
        </div>
        
        <div class="model-selection">
          <label for="model-select">选择模型:</label>
          <select id="model-select" class="model-select">
            <option value="deepseek" selected>DeepSeek</option>
            <option value="qwen-max">通义千问max</option>
            <option value="azure-openai">Azure OpenAI</option>
          </select>
        </div>
      
        <!-- DeepSeek配置 -->
        <div class="deepseek-section">
          <h4>DeepSeek 配置<sub>DeepSeek官方不支持图片</sub></h4>
          <div class="deepseek-api-key-section">
            <label for="deepseek-api-key">DeepSeek API 密钥:</label>
            <input type="password" id="deepseek-api-key" class="api-key-input" placeholder="请输入DeepSeek API密钥">
          </div>
        </div>

        <!-- 通义千问配置 -->
        <div class="qwen-section">
          <h4>通义千问 配置</h4>
          <div class="qwen-api-key-section">
            <label for="qwen-api-key">通义千问 API 密钥:</label>
            <input type="password" id="qwen-api-key" class="api-key-input" placeholder="请输入通义千问 API密钥">
          </div>
        </div>

        <!-- Azure OpenAI配置 -->
        <div class="azure-section">
          <h4>Azure OpenAI 配置</h4>
          <div class="azure-api-key-section">
            <label for="azure-api-key">Azure OpenAI API 密钥:</label>
            <input type="password" id="azure-api-key" class="api-key-input" placeholder="请输入Azure OpenAI API密钥">
          </div>
          
          <div class="azure-endpoint-section">
            <label for="azure-endpoint">Azure OpenAI访问端点:</label>
            <input type="text" id="azure-endpoint" class="azure-endpoint-input" placeholder="请输入Azure OpenAI访问端点">
          </div>
          
          <div class="azure-model-section">
            <label for="azure-model">模型名称:</label>
            <input type="text" id="azure-model" class="azure-model-input" placeholder="请输入模型名称">
          </div>
        </div>
        
        <!-- 公共系统提示语区域 -->
        <div class="system-prompt-section">
          <label for="system-prompt">系统提示语:</label>
          <textarea id="system-prompt" class="system-prompt-textarea">
你是一个几何学助手，可以通过GeoGebra绘制几何图形和动画。

当用户请求绘制图形或动画时，请提供：
1. 友好的解释，包括数学概念和原理
2. 清晰的GeoGebra命令

规范：
1. 将GeoGebra命令放在``geogebra和```标记之间，每行一个命令。
2. 不要在GeoGebra命令行添加任何注释！
3. 命令应该按照逻辑顺序排列，从基本元素到复杂构造。
4. 数学公式应该包裹在$$中

GeoGebra支持的命令类型包括：

## 基本元素
- 点：A = (2, 3)
- 向量：v = Vector[A, B] 或 v = (1, 2)
- 线段：Segment(A, B)
- 直线：Line(A, B)
- 射线：Ray(A, B)
- 圆：Circle(A, 3) 或 Circle(A, B)
- 椭圆：Ellipse(F1, F2, a)
- 多边形：Polygon(A, B, C, …)
- 文本: Text(<对象>)
Text(<对象>,<是否替换变量?true|false>)
Text(<对象>,<点>)
Text(<对象>,<点>,<是否替换变量?true|false>)
Text(<对象>,<点>,<是否替换变量?true|false>,<LaTeX 公式布尔值>)
Text(<对象>,<点>,<是否替换变量?true|false>,<LaTeX 公式布尔值>,<水平对齐 -1|0|1>)
Text(<对象>,<点>,<是否替换变量?true|false>,<LaTeX 公式布尔值>,<水平对齐 -1|0|1>,<垂直对齐 -1|0|1>)

## 函数和曲线
- 斜率：Slope(line)

## 动画和交互
- 滑块：a = Slider[0, 10, 0.1]
- 启动/停止动画：StartAnimation[a, true] 或 StartAnimation[a, false]
- 设置动画速度：SetAnimationSpeed(object, speed)
- 条件显示对象：SetConditionToShowObject(object, condition)
- 设置轨迹：SetTrace(object, true) 或 SetTrace(object, false)
- 轨迹曲线：Locus(point, parameter)

## 高级功能
- 序列：Sequence(expression, variable, from, to, step)
- 列表：{a, b, c}
- 条件表达式：If(condition, then, else)
- 文本对象：Text("文本", (x, y))
- 脚本按钮（示意）：点击脚本中使用 RunClickScript("命令")

## 动画示例

### 1. 创建滑块并用于动画：
  a = Slider[0, 10, 0.1]
  P = (a, 0)
  StartAnimation[a, true]

### 2. 圆上运动的点：
  a = Slider[0, 2π, 0.01]
  P = (5 cos(a), 5 sin(a))
  Circle((0, 0), 5)
  StartAnimation[a, true]

### 3. 函数图像的动态变化：
  a = Slider[0, 5, 0.1]
  f(x) = a x^2
  StartAnimation[a, true]

请确保命令语法正确，并在解释中提及每个命令的目的。
如果用户的请求不明确，请提出澄清问题。
用户的请求可能与之前提出的请求相关。</textarea>
        </div>
        <button id="save-settings" class="save-settings-btn">保存设置</button>
      </div>
    </div>
    
    <div class="input-panel">
      <div class="chat-section">
        <div id="chat-container" class="chat-container"></div>
        
        <div class="image-preview-wrapper">
          <div class="image-preview-container" id="image-preview-container">
            <img id="image-preview" src="" alt="Image preview">
            <button id="close-preview" class="close-preview-btn" title="移除图片">×</button>
          </div>
        </div>
        
        <div class="user-input-container">
          <div class="input-wrapper">
            <textarea id="user-input" placeholder="在这里输入内容，让AI帮你画图" rows="3"></textarea>
            <div class="input-actions">
              <button id="image-attachment-btn" class="image-attachment-btn" title="添加图片"></button>
              <button id="send-btn" class="send-btn"  title="发送消息"></button>
            </div>
          </div>
        </div>

      </div>
    </div>
  </div>

</body>
</html>