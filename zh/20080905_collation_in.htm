<!DOCTYPE html><html lang="zh"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>雪峰博客</title><meta name="description" content="分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。"><meta name="keywords" content="AI, GitHub Copilot, Azure云, 云计算, 前端技术, 后端技术, Web开发, 软件工程"><link rel="stylesheet" href="/assets/css/style.min.css"><link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/default.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js"></script></head><body><nav class="navbar"><div class="nav-container"><div class="nav-logo"><h2><i class="fas fa-snowflake"></i> Snowpeak</h2></div><div class="nav-menu"><a href="/" class="nav-link">首页</a><a href="/zh/page_1.htm" class="nav-link">文章</a><a href="/#tools" class="nav-link">工具</a><a href="/zh/about.htm" class="nav-link">关于</a><a href="/en/" class="nav-link lang-switch"><i class="fas fa-globe"></i> English</a></div><div class="nav-toggle" id="mobile-menu"><span class="bar"></span><span class="bar"></span><span class="bar"></span></div></div></nav><header class="article-header"><div class="container"><h1>MySQL 的 collation</h1><div class="article-meta"><span><i class="fas fa-calendar"></i> 发布时间: 2008-09-05 15:01:00</span><span><i class="fas fa-clock"></i> 阅读约需: 5 分钟 </span><span><i class="fas fa-tag"></i> 分类: 软件工具</span></div></div></header><main class="article-container"><h2>先转一别人的学习文章做个引子和基础</h2><p><a href="http://logzgh.itpub.net/post/3185/467401">http://logzgh.itpub.net/post/3185/467401</a></p><p>在以前用 Oracle 的时候，很少关注它的 collation 方法，但是在 MySQL 中，如果不注意这点，可能会出现问题。</p><h3>问题描述</h3><p>一张 <code>test</code> 表，字符集采用的是 <code>latin1</code>。</p> <pre><code class="language-sql">SELECT to_id FROM test WHERE to_id='cn象_王';
</code></pre> <p>结果：</p> <pre><code class="language-plaintext">+---------------+
| to_id         |
+---------------+
| cn陶_陶       |
| cn象_王       |
+---------------+
2 rows in set (0.00 sec)
</code></pre> <p>取 <code>cn象_王</code> 的数据，居然把 <code>cn陶_陶</code> 的数据也取回来了。这显然是不允许的。</p><h3>查看编码</h3> <pre><code class="language-sql">SELECT HEX('cn陶_陶');
</code></pre> <p>结果：</p> <pre><code class="language-plaintext">+----------------+
| hex('cn陶_陶') |
+----------------+
| 636ECCD55FCCD5 |
+----------------+
1 row in set (0.00 sec)
</code></pre> <pre><code class="language-sql">SELECT HEX('cn象_王');
</code></pre> <p>结果：</p> <pre><code class="language-plaintext">+----------------+
| hex('cn象_王') |
+----------------+
| 636ECFF35FCDF5 |
+----------------+
1 row in set (0.00 sec)
</code></pre> <p>编码的确是不一样的，但是为什么 MySQL 会认为这两条记录是一样的呢？</p><h3>定位问题</h3><p>一开始我们就把问题定位于 collation 引起的问题。</p> <pre><code class="language-sql">SHOW VARIABLES LIKE 'collation%';
</code></pre> <p>结果：</p> <pre><code class="language-plaintext">| collation_connection | latin1_swedish_ci |
| collation_database   | latin1_swedish_ci |
| collation_server     | latin1_swedish_ci |
</code></pre> <p>手工把这些参数修改为 <code>latin1_bin</code>，结果居然一样。这下感觉真是奇怪了。</p><h3>MySQL collation 命名规则</h3><p>MySQL collation 的命名规则如下：</p><ul><li>它们以其相关的字符集名开始，通常包括一个语言名，并且以 <code>_ci</code>（大小写不敏感）、<code>_cs</code>（大小写敏感）或 <code>_bin</code>（二元）结束。</li></ul><p>例如，<code>latin1</code> 字符集有以下几种校正规则：</p><table><thead><tr><th>校对规则</th><th>含义</th></tr></thead><tbody><tr><td>latin1_german1_ci</td><td>德国 DIN-1</td></tr><tr><td>latin1_swedish_ci</td><td>瑞典/芬兰</td></tr><tr><td>latin1_danish_ci</td><td>丹麦/挪威</td></tr><tr><td>latin1_german2_ci</td><td>德国 DIN-2</td></tr><tr><td>latin1_bin</td><td>符合 latin1 编码的二进制</td></tr><tr><td>latin1_general_ci</td><td>多种语言（西欧）</td></tr><tr><td>latin1_general_cs</td><td>多种语言（西欧 ISO），大小写敏感</td></tr><tr><td>latin1_spanish_ci</td><td>现代西班牙</td></tr></tbody></table><h3>解决问题</h3><p>最后我们将表格重建，手工指定表格级别的 collation 为 <code>latin1_bin</code>。这个问题就得到了解决。</p> <pre><code class="language-sql">ALTER TABLE db_allot CONVERT TO CHARACTER SET latin1 COLLATE latin1_bin;
</code></pre> <h3>建议</h3><p>建议 collation 都尽量采用字符集相应的 <code>_bin</code> 类型的校对规则，这样不容易出错。</p><h2>再说说我自己的体会</h2><p>觉得 <code>character set latin1 collate latin1_bin</code> 就是老版的 <code>VARCHAR BINARY</code> 的改进，只是新版的先用 <code>character set</code> 定字符集，再用此字符集名字加 <code>_bin</code> 定校对规则为二进制的，从而确保中文查询正确。</p><h3>测试</h3><p>把字段属性改为不带 <code>BINARY</code> 的：</p> <pre><code class="language-sql">ALTER TABLE `comment_content_1_01` CHANGE `thread` `thread` VARCHAR(50) DEFAULT NULL;
</code></pre> <p>表结构变为：</p> <pre><code class="language-plaintext">thread varchar(50) default NULL
</code></pre> <p>可见 <code>character set latin1 collate latin1_bin</code> 就是老版的 <code>VARCHAR BINARY</code> 的改进。</p><p>此外，还可以通过表格级别的 collation 设置为 <code>latin1_bin</code>，而不用逐个改字段属性。</p><h3>示例</h3> <pre><code class="language-sql">ALTER TABLE comment_content_1_01 CONVERT TO CHARACTER SET latin1 COLLATE latin1_bin;
</code></pre> <p>导出表结构：</p> <pre><code class="language-sql">CREATE TABLE comment_content_1_01 (
    content_id int(11) NOT NULL auto_increment,
    thread varchar(50) collate latin1_bin default NULL,
    uname varchar(100) collate latin1_bin default NULL,
    nick varchar(100) collate latin1_bin default NULL,
    uid int(11) unsigned default NULL,
    content text collate latin1_bin,
    post_time datetime default NULL,
    post_ip int(10) unsigned default NULL,
    `status` enum('unaudit','normal','deleted') collate latin1_bin NOT NULL default 'unaudit',
    PRIMARY KEY (content_id)
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_bin;
</code></pre> <p>即便原来没定各字段的 <code>collate</code>，现在也全都是 <code>collate latin1_bin</code> 了。</p><hr><p><em>原文链接: https://www.snowpeak.fun/cn/article/detail/collation_in_mysql/</em></p></main><footer class="footer"><div class="container"><div class="footer-content"><div class="footer-section"><h3><i class="fas fa-snowflake"></i> Snowpeak</h3><p>分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。</p><div class="social-links"><div class="social-platforms"><a href="https://github.com/xfsnow" target="_blank" class="social-link"><i class="fab fa-github"></i></a><a href="https://snowpeak.blog.csdn.net/" target="_blank" class="social-link"><i class="fas fa-blog"></i></a><a href="https://space.bilibili.com/701839928" target="_blank" class="social-link"><i class="fab fa-bilibili"></i></a><a href="https://www.linkedin.com/in/snowpeak" target="_blank" class="social-link"><i class="fab fa-linkedin"></i></a></div><div class="wechat-section"><div class="wechat-info"><span class="wechat-label">微信公众号</span><span class="wechat-name">技术温暖生活</span></div><img src="/assets/img/techwarm.jpg" alt="技术温暖生活" class="wechat-qr"></div></div></div><div class="footer-section"><h4>快速链接</h4><ul><li><a href="/#articles">文章</a></li><li><a href="/#tools">工具</a></li><li><a href="https://docs.github.com/en/pages" target="_blank">GitHub Pages</a></li></ul></div><div class="footer-section"><h4>技术栈</h4><ul><li>Python</li><li>GitHub Copilot</li><li>Claude Sonnet 4</li><li>HTML/CSS/JS</li><li>响应式设计</li></ul></div></div><div class="footer-bottom"><p>Copyright &copy; 2013-<script>document.write((new Date()).getFullYear());</script> 雪峰博客。运行在 GitHub Pages 上。 <a href="https://beian.miit.gov.cn" target="_blank" class="icp_beian">京ICP备2021007720号</a><a href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010502052523" target="_blank" class="gongan_beian">京公网安备11010502052523号</a></p></div></div></footer><script src="/zh/index.js"></script><script src="/assets/js/blog.min.js"></script><script>hljs.highlightAll();</script></body></html>