<!DOCTYPE html><html lang="zh"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>雪峰博客</title><meta name="description" content="分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。"><meta name="keywords" content="AI, GitHub Copilot, Azure云, 云计算, 前端技术, 后端技术, Web开发, 软件工程"><link rel="stylesheet" href="/assets/css/style.min.css"><link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/default.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js"></script></head><body><nav class="navbar"><div class="nav-container"><div class="nav-logo"><h2><i class="fas fa-snowflake"></i> Snowpeak</h2></div><div class="nav-menu"><a href="/" class="nav-link">首页</a><a href="/zh/page_1.htm" class="nav-link">文章</a><a href="/#tools" class="nav-link">工具</a><a href="/zh/about.htm" class="nav-link">关于</a><a href="/en/" class="nav-link lang-switch"><i class="fas fa-globe"></i> English</a></div><div class="nav-toggle" id="mobile-menu"><span class="bar"></span><span class="bar"></span><span class="bar"></span></div></div></nav><header class="article-header"><div class="container"><h1>Tomcat 6 通过 JDBC 连接池连接 SQL Server 2000 和 MySQL 5 的设置</h1><div class="article-meta"><span><i class="fas fa-calendar"></i> 发布时间: 2007-12-07 15:23:00</span><span><i class="fas fa-clock"></i> 阅读约需: 7 分钟 </span><span><i class="fas fa-tag"></i> 分类: 软件工具</span></div></div></header><main class="article-container"><h2>Tomcat 6 通过 JDBC 连接池连接 SQL Server 2000 和 MySQL 5 的设置</h2><p>Tomcat 文档及网上看到的说明都挺乱的，我经过几天尝试现在测试成功的Tomcat 6 设置分享一下。</p><p>我的环境是:</p><ul><li>Windows XP SP2, Windows 2003 Server SP1</li><li>Tomcat 6</li><li>SQL Server 2000</li><li>MySQL 5</li></ul><h2>SQL Server 2000 连接池配置</h2><p>方法按顺序操作如下：</p><ol><li><p>下载 SQL Server 2000 JDBC Driver 放在 <code>/Tomcat6/lib</code>，我现在使用的是 <code>msbase.jar</code>、<code>mssqlserver.jar</code>、<code>msutil.jar</code> 这3个文件。</p></li><li><p>在 <code>Tomcat 6.0/webapps</code> 下建立文件夹，比如 <code>poolmssql</code>。</p></li><li><p><code>poolmssql</code> 文件夹内建 <code>META-INF</code> 文件夹，再建 <code>context.xml</code> 文件，内容：</p></li></ol> <pre><code class="language-xml">&lt;Context path=&quot;/poolmssql&quot; docBase=&quot;poolmssql&quot; debug=&quot;5&quot; reloadable=&quot;true&quot; crossContext=&quot;true&quot;&gt;
    &lt;Resource name=&quot;pool_mssql&quot; auth=&quot;Container&quot; type=&quot;javax.sql.DataSource&quot;
       maxActive=&quot;100&quot; maxIdle=&quot;30&quot; maxWait=&quot;10000&quot;
       driverClassName=&quot;com.microsoft.jdbc.sqlserver.SQLServerDriver&quot;
       url=&quot;jdbc:microsoft:sqlserver://xx.xx.xx.xx:1433;DatabaseName=somedb&quot;
       username=&quot;someuser&quot; password=&quot;somepassword&quot;  /&gt;
&lt;/Context&gt;
</code></pre> <ol><li>在 <code>poolmssql</code> 文件夹下建立测试程序页，内容：</li></ol> <pre><code class="language-jsp">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html;charset=utf-8&quot; import=&quot;java.sql.*, javax.sql.*, javax.naming.*&quot; %&gt;
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;en&quot; xml:lang=&quot;en&quot;&gt;
&lt;head&gt;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;
&lt;title&gt;JDBC 连接池&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;%
   DataSource ds = null;
   InitialContext ctx = new InitialContext();
   //这里 java:comp/env/ 后面的值就是context.xml 文件里 Resource 项下 name 的值 &quot;jdbc/pool_mssql&quot;
   ds = (DataSource)ctx.lookup(&quot;java:comp/env/pool_mssql&quot;);
   Connection conn = ds.getConnection();
   Statement stmt = conn.createStatement();
   //找个能运行的 SQL 语句试试即可
   String strSql = &quot;SELECT TOP 10 CompanyName FROM Suppliers&quot;;
   ResultSet rs = stmt.executeQuery(strSql);
   while(rs.next()) {
       out.print(rs.getString(1)+&quot;&lt;br /&gt;&quot;);
   }
%&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre> <p><strong>注意：</strong></p><ol><li>在 <code>page</code> 声明里要 <code>import java.sql.*, javax.sql.*, javax.naming.*</code> 这3个包，因为这时测试程序中声明对象实例要用到的。</li><li><code>page</code> 声明里要 <code>contentType="text/html;charset=utf-8"</code>，网页 <code>meta</code> 里要 <code>content="text/html; charset=utf-8"</code>，最后程序页本身还要存成 <code>utf-8</code> 编码的文本文件，这是我找到的最简单的保证非西文能正常显示的方法。</li></ol><h2>MySQL 5 连接池配置方法</h2><p>与 MSSQL Server 大同小异：</p><ol><li><p>下载 <code>Connector/J</code> 放在 <code>/Tomcat6/lib</code>，我现在使用的是 <code>mysql-connector-java-5.0.4-bin.jar</code>。</p></li><li><p>在 <code>Tomcat 6.0/webapps</code> 下建立文件夹，比如 <code>mysql</code>。</p></li><li><p><code>mysql</code> 文件夹内建 <code>META-INF</code> 文件夹，再建 <code>context.xml</code> 文件，内容：</p></li></ol> <pre><code class="language-xml">&lt;Context path=&quot;/mymymy&quot; docBase=&quot;mymymy&quot; debug=&quot;5&quot; reloadable=&quot;true&quot; crossContext=&quot;true&quot;&gt;
    &lt;Resource name=&quot;pool_mysql&quot; auth=&quot;Container&quot; type=&quot;javax.sql.DataSource&quot;
       maxActive=&quot;100&quot; maxIdle=&quot;30&quot; maxWait=&quot;10000&quot;
       driverClassName=&quot;com.mysql.jdbc.Driver&quot;
       url=&quot;jdbc:mysql://localhost:3306/dbname?autoReconnect=true&quot;
       username=&quot;someuser&quot; password=&quot;somepassword&quot; /&gt;
&lt;/Context&gt;
</code></pre> <ol><li>在 <code>mysql</code> 文件夹下建立测试程序页，内容：</li></ol> <pre><code class="language-jsp">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html;charset=utf-8&quot; import=&quot;java.sql.*, javax.sql.*, javax.naming.*&quot; %&gt;
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;en&quot; xml:lang=&quot;en&quot;&gt;
&lt;head&gt;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;
&lt;title&gt;JDBC 连接池&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;%
   DataSource ds = null;
   InitialContext ctx = new InitialContext();
   //这里 java:comp/env/ 后面的值就是context.xml 文件里 Resource 项下 name 的值 &quot;jdbc/pool_mysql&quot;
   ds = (DataSource)ctx.lookup(&quot;java:comp/env/jdbc/pool_mysql&quot;);
   Connection conn = ds.getConnection();
   Statement stmt = conn.createStatement();
   //找个能运行的 SQL 语句试试即可
   String strSql = &quot;SELECT TOP 10 CompanyName FROM Suppliers&quot;;
   ResultSet rs = stmt.executeQuery(strSql);
   while(rs.next()) {
       out.print(rs.getString(1)+&quot;&lt;br /&gt;&quot;);
   }
%&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre> <p><strong>注意：</strong></p><ol><li>在 <code>page</code> 声明里要 <code>import java.sql.*, javax.sql.*, javax.naming.*</code> 这3个包，因为这时测试程序中声明对象实例要用到的。</li><li>以下的程序页文件本身要使用 <code>utf-8</code> 编码，而且 MySQL 数据库也需要先设置成 <code>utf-8</code> 编码的，具体方法这里不赘述，建议参见 <a href="http://unix-cd.com/vc/www/26/2007-07/6214.html">http://unix-cd.com/vc/www/26/2007-07/6214.html</a>。</li></ol><h2>其它备注</h2><p>我这里没有做以下工作，但仍能正常运行：</p><ul><li>把 <code>aspectjrt.jar</code> 放在 <code>lib</code> 下。</li><li>在 <code>mssql</code> 文件夹内建 <code>WEB-INF</code> 文件夹，再建 <code>web.xml</code> 文件。</li></ul><h2>常见报错</h2><ol><li><code>org.apache.tomcat.dbcp.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Communications link failure due to underlying exception:</code></li></ol><p>字面意思是连接 MySQL 服务被拒绝，通常是 MySQL 服务未启动造成的。</p><ol><li><code>java.sql.SQLException: [Microsoft][SQLServer 2000 Driver for JDBC]Error establishing socket.</code></li></ol><p>SQLServer 2000 服务未启动会报这样的错。</p><ol><li><code>type Status report message /poolmysql.jsp description The requested resource (/xxx.jsp) is not available.</code></li></ol><p>通常是 <code>context.xml</code> 里 <code>url</code> 的值写得不对。</p><p>刚入门，很多还不很理解，如有不周，欢迎交流与指正！</p><hr><p><em>原文链接: https://www.snowpeak.fun/cn/article/detail/configure_tomcat_6_to_connect_sql_server_2000_and_mysql_5_with_jdbc_pool/</em></p></main><footer class="footer"><div class="container"><div class="footer-content"><div class="footer-section"><h3><i class="fas fa-snowflake"></i> Snowpeak</h3><p>分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。</p><div class="social-links"><div class="social-platforms"><a href="https://github.com/xfsnow" target="_blank" class="social-link"><i class="fab fa-github"></i></a><a href="https://snowpeak.blog.csdn.net/" target="_blank" class="social-link"><i class="fas fa-blog"></i></a><a href="https://space.bilibili.com/701839928" target="_blank" class="social-link"><i class="fab fa-bilibili"></i></a><a href="https://www.linkedin.com/in/snowpeak" target="_blank" class="social-link"><i class="fab fa-linkedin"></i></a></div><div class="wechat-section"><div class="wechat-info"><span class="wechat-label">微信公众号</span><span class="wechat-name">技术温暖生活</span></div><img src="/assets/img/techwarm.jpg" alt="技术温暖生活" class="wechat-qr"></div></div></div><div class="footer-section"><h4>快速链接</h4><ul><li><a href="/#articles">文章</a></li><li><a href="/#tools">工具</a></li><li><a href="https://docs.github.com/en/pages" target="_blank">GitHub Pages</a></li></ul></div><div class="footer-section"><h4>技术栈</h4><ul><li>Python</li><li>GitHub Copilot</li><li>Claude Sonnet 4</li><li>HTML/CSS/JS</li><li>响应式设计</li></ul></div></div><div class="footer-bottom"><p>Copyright &copy; 2013-<script>document.write((new Date()).getFullYear());</script> 雪峰博客。运行在 GitHub Pages 上。 <a href="https://beian.miit.gov.cn" target="_blank" class="icp_beian">京ICP备2021007720号</a><a href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010502052523" target="_blank" class="gongan_beian">京公网安备11010502052523号</a></p></div></div></footer><script src="/zh/index.js"></script><script src="/assets/js/blog.min.js"></script><script>hljs.highlightAll();</script></body></html>