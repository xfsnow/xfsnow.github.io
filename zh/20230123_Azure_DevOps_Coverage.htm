<!DOCTYPE html><html lang="zh"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>雪峰博客</title><meta name="description" content="分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。"><meta name="keywords" content="AI, GitHub Copilot, Azure云, 云计算, 前端技术, 后端技术, Web开发, 软件工程"><link rel="stylesheet" href="/assets/css/style.css"><link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/default.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js"></script></head><body><nav class="navbar"><div class="nav-container"><div class="nav-logo"><h2><i class="fas fa-snowflake"></i> Snowpeak</h2></div><div class="nav-menu"><a href="/" class="nav-link">首页</a><a href="/zh/page_1.htm" class="nav-link">文章</a><a href="/#tools" class="nav-link">工具</a><a href="/zh/about.htm" class="nav-link">关于</a><a href="/en/" class="nav-link lang-switch"><i class="fas fa-globe"></i> English</a></div><div class="nav-toggle" id="mobile-menu"><span class="bar"></span><span class="bar"></span><span class="bar"></span></div></div></nav><header class="article-header"><div class="container"><h1>在Azure Pipeline中显示代码覆盖率</h1><div class="article-meta"><span><i class="fas fa-calendar"></i> 发布时间: 2023-01-23 10:00:00</span><span><i class="fas fa-clock"></i> 阅读约需: 1 分钟 </span><span><i class="fas fa-tag"></i> 分类: 工具</span></div></div></header><main class="article-container"><p>Azure Pipeline是微软云上全线DevOps工具集中负责自动化流水线的托管服务，具备完备的流水线管理功能，还方便和各种测试、构建和部署工具集成。代码覆盖率是自动化测试中的一个重要指标，统计测试过程中被执行的源代码占全部源代码的比例，进而间接度量软件质量。如果项目代码配置了导出代码覆盖率，Azure Pipeline可以采集相应的数据并存储下来。不过默认情况下，这些数据只提供下载，再使用其它工具查看。本文简单介绍如何在Azure Pipeline的控制台上可视化地显示代码覆盖率。</p><h2>准备项目源码</h2><p>我们以dotnet new xunit来初始化一个标准的.NET测试用例项目。在VS Code中显示如下：</p><p><img alt="Text Description automatically generated" src="../assets/img/20230123_Azure_DevOps_Coverage_01.png"></p><p>要实现代码覆盖率，核心的配置在NetCodeCoverage.csproj这个文件中的下面这段</p> <pre><code class="language-xml">&lt;PackageReference Include=&quot;coverlet.collector&quot; Version=&quot;3.1.2&quot;&gt;
      &lt;IncludeAssets&gt;runtime; build; native; contentfiles; analyzers; buildtransitive&lt;/IncludeAssets&gt;
      &lt;PrivateAssets&gt;all&lt;/PrivateAssets&gt;
&lt;/PackageReference&gt;
</code></pre> <p>如果没有，可以自己手动添加上去。</p><p>然后执行 dotnet build和dotnet test命令，可以看到以下输出。</p><p><img alt="A screenshot of a computer Description automatically generated" src="../assets/img/20230123_Azure_DevOps_Coverage_02.png"></p><p>默认创建的测试使用里面没有任何代码逻辑，当然是测试通过啦。如果有问题，还可以从我的GitHub直接fork源码。</p><p><a href="https://github.com/xfsnow/NetCodeCoverage">https://github.com/xfsnow/NetCodeCoverage</a></p><h2>创建Azure Pipeline</h2><p>在 Azure DevOps控制台找到Pipeline下的Pipeline，右上角New pipeline创建一个新的yaml格式的pipeline。</p><p>Where is your code 先GitHub。连接到前面刚刚提交的GitHub源码库。</p><p>Configure页选Starter template。最后来到Review页，我们看到以下一个起始的流水线样子。</p><p><img alt="Graphical user interface, text, application, email Description automatically generated" src="../assets/img/20230123_Azure_DevOps_Coverage_03.png"></p><p>把现有的 2 条script 任务删掉。点右上角的Show assistant，在Tasks中点击 .NET Core，如下图所示，先添加一个build任务。</p><p><img alt="Graphical user interface, text, application Description automatically generated" src="../assets/img/20230123_Azure_DevOps_Coverage_04.png"></p><p>然后Command菜单选择test</p><p><img alt="Graphical user interface, text, application Description automatically generated" src="../assets/img/20230123_Azure_DevOps_Coverage_05.png"></p><p>注意保持Publish test results and code coverage选中不动，再添加一个测试任务。</p><p>最后添加一个发布代码覆盖率任务。</p><p>最后点击右上角Save and run按钮，按提示commit到源码库并执行。</p><ul><li>[ ] 待完成</li></ul></main><footer class="footer"><div class="container"><div class="footer-content"><div class="footer-section"><h3><i class="fas fa-snowflake"></i> Snowpeak</h3><p>分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。</p><div class="social-links"><div class="social-platforms"><a href="https://github.com/xfsnow" target="_blank" class="social-link"><i class="fab fa-github"></i></a><a href="https://snowpeak.blog.csdn.net/" target="_blank" class="social-link"><i class="fas fa-blog"></i></a><a href="https://space.bilibili.com/701839928" target="_blank" class="social-link"><i class="fab fa-bilibili"></i></a><a href="https://www.linkedin.com/in/snowpeak" target="_blank" class="social-link"><i class="fab fa-linkedin"></i></a></div><div class="wechat-section"><div class="wechat-info"><span class="wechat-label">微信公众号</span><span class="wechat-name">技术温暖生活</span></div><img src="/assets/img/techwarm.jpg" alt="技术温暖生活" class="wechat-qr"></div></div></div><div class="footer-section"><h4>快速链接</h4><ul><li><a href="/#articles">文章</a></li><li><a href="/#tools">工具</a></li><li><a href="https://docs.github.com/en/pages" target="_blank">GitHub Pages</a></li></ul></div><div class="footer-section"><h4>技术栈</h4><ul><li>Python</li><li>GitHub Copilot</li><li>Claude Sonnet 4</li><li>HTML/CSS/JS</li><li>响应式设计</li></ul></div></div><div class="footer-bottom"><p>Copyright &copy; 2013-<script>document.write((new Date()).getFullYear());</script> 雪峰博客。运行在 GitHub Pages 上。</p></div></div></footer><script src="/zh/index.js"></script><script src="/assets/js/blog.js"></script><script>hljs.highlightAll();</script></body></html>