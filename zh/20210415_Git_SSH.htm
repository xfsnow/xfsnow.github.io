<!DOCTYPE html><html lang="zh"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>雪峰博客</title><meta name="description" content="分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。"><meta name="keywords" content="AI, GitHub Copilot, Azure云, 云计算, 前端技术, 后端技术, Web开发, 软件工程"><link rel="stylesheet" href="/assets/css/style.css"><link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/default.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js"></script></head><body><nav class="navbar"><div class="nav-container"><div class="nav-logo"><h2><i class="fas fa-snowflake"></i> Snowpeak</h2></div><div class="nav-menu"><a href="/" class="nav-link">首页</a><a href="/zh/page_1.htm" class="nav-link">文章</a><a href="/#tools" class="nav-link">工具</a><a href="/zh/about.htm" class="nav-link">关于</a><a href="/en/" class="nav-link lang-switch"><i class="fas fa-globe"></i> English</a></div><div class="nav-toggle" id="mobile-menu"><span class="bar"></span><span class="bar"></span><span class="bar"></span></div></div></nav><header class="article-header"><div class="container"><h1>Git源码库和SSH远程登录的多账号配置</h1><div class="article-meta"><span><i class="fas fa-calendar"></i> 发布时间: 2021-04-15 17:14:21</span><span><i class="fas fa-clock"></i> 阅读约需: 5 分钟 </span><span><i class="fas fa-tag"></i> 分类: AI技术</span></div></div></header><main class="article-container"><p>Git源码库多账号配置，本质上还是SSH远程登录多账号配置的扩展。先看一下基础的SSH远程登录多账号配置。</p><p>在 ~/.ssh/ 下创建一个名为 config 的文件。里面写上如下配置：</p> <pre><code>Host testVM

    HostName xxx.xxx.xxx.xxx

    User username

    Port 22

    IdentityFile /path/to/my/private/key/testVM.pem
</code></pre> <p>注意所有私钥文件权限要设置为 400，config 文件权限要设置为 600。</p> <pre><code>chmod 400 /path/to/my/private/key/testVM.pem

chmod 600 ~/.ssh/config
</code></pre> <p>然后就可以用代号运行简化的 SSH 远程登录了，比如 ssh testVM。</p><p>在此基础之上，当我们有多个 Git源码库需要同时管理时，还是在 config 文件中增加 Git服务器的访问配置。比如：</p> <pre><code># Github

Host github.com

    User github_user_name

    IdentityFile  /path/to/my/private/key/github.pem

# Azure Repos，Azure上托管的私有源码库

Host ssh.dev.azure.com

    User git

    IdentityFile  /path/to/my/private/key/repos.pem
</code></pre> <p>需要注意的是配置Git服务器时，不要写 HostName 项，而是直接把Git服务器域名写在 Host 段，这样才能让ssh 和git客户端正常找到相关服务器的配置，加载到需要的私钥。</p><p>之后我们就可以用 ssh -Tv git@github.com来验证授权了。其中 -T 参数表示测试验证，-v 表示以1级详细程度输出调试信息。</p><p>返回结果比较长，只节选重要的部分：</p> <pre><code>OpenSSH_7.5p1, OpenSSL 1.0.2o  27 Mar 2018

debug1: Reading configuration data /home/mobaxterm/.ssh/config

debug1: /home/mobaxterm/.ssh/config line 12: Applying options for github.com

…

debug1: Connecting to github.com [192.30.255.113] port 22.

debug1: Connection established.

…

debug1: Authentications that can continue: publickey

debug1: Next authentication method: publickey

debug1: Trying private key: /path/to/my/private/key/github.pem

debug1: Authentication succeeded (publickey).

Authenticated to github.com ([192.30.255.113]:22).

debug1: Requesting X11 forwarding with authentication spoofing.

debug1: Requesting authentication agent forwarding.

X11 forwarding request failed on channel 0

debug1: client_input_channel_req: channel 0 rtype exit-status reply 0

Hi github_user_name! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre> <p>使用 Azure DevOps Repos 作源码库时，使用 ssh -Tv 来验证更为重要，因为它返回的验证成功信息是在调试中的，不加 -v 时会让人感觉验证失败了。</p> <pre><code>ssh -T git@ssh.dev.azure.com

X11 forwarding request failed on channel 0

shell request failed on channel 0
</code></pre> <p>加上 -T 参数再看</p> <pre><code>ssh -Tv git@ssh.dev.azure.com

OpenSSH_7.5p1, OpenSSL 1.0.2o  27 Mar 2018

debug1: Reading configuration data /home/mobaxterm/.ssh/config

debug1: /home/mobaxterm/.ssh/config line 4: Applying options for ssh.dev.azure.com

…

debug1: Connecting to ssh.dev.azure.com [20.189.107.3] port 22.

debug1: Connection established.

…

debug1: Authenticating to ssh.dev.azure.com:22 as 'git'

debug1: Host 'ssh.dev.azure.com' is known and matches the RSA host key.

debug1: Found key in /home/mobaxterm/.ssh/known_hosts:3

debug1: Authentications that can continue: password,publickey

debug1: Next authentication method: publickey

debug1: Trying private key: /path/to/my/private/key/repos.pem

debug1: Authentication succeeded (publickey).

Authenticated to ssh.dev.azure.com ([20.189.107.3]:22).

…

X11 forwarding request failed on channel 0

shell request failed on channel 0
</code></pre> <p>就可以看到验证通过的信息了。</p><p>到此，Git 配置多账号就完成了。下面就可以 git clone 开始快乐编码了。</p></main><footer class="footer"><div class="container"><div class="footer-content"><div class="footer-section"><h3><i class="fas fa-snowflake"></i> Snowpeak</h3><p>分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。</p><div class="social-links"><div class="social-platforms"><a href="https://github.com/xfsnow" target="_blank" class="social-link"><i class="fab fa-github"></i></a><a href="https://snowpeak.blog.csdn.net/" target="_blank" class="social-link"><i class="fas fa-blog"></i></a><a href="https://space.bilibili.com/701839928" target="_blank" class="social-link"><i class="fab fa-bilibili"></i></a><a href="https://www.linkedin.com/in/snowpeak" target="_blank" class="social-link"><i class="fab fa-linkedin"></i></a></div><div class="wechat-section"><div class="wechat-info"><span class="wechat-label">微信公众号</span><span class="wechat-name">技术温暖生活</span></div><img src="/assets/img/techwarm.jpg" alt="技术温暖生活" class="wechat-qr"></div></div></div><div class="footer-section"><h4>快速链接</h4><ul><li><a href="/#articles">文章</a></li><li><a href="/#tools">工具</a></li><li><a href="https://docs.github.com/en/pages" target="_blank">GitHub Pages</a></li></ul></div><div class="footer-section"><h4>技术栈</h4><ul><li>Python</li><li>GitHub Copilot</li><li>Claude Sonnet 4</li><li>HTML/CSS/JS</li><li>响应式设计</li></ul></div></div><div class="footer-bottom"><p>Copyright &copy; 2013-<script>document.write((new Date()).getFullYear());</script> 雪峰博客。运行在 GitHub Pages 上。</p></div></div></footer><script src="/zh/index.js"></script><script src="/assets/js/blog.js"></script><script>hljs.highlightAll();</script></body></html>