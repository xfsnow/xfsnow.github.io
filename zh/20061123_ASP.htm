<!DOCTYPE html><html lang="zh"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>雪峰博客</title><meta name="description" content="分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。"><meta name="keywords" content="AI, GitHub Copilot, Azure云, 云计算, 前端技术, 后端技术, Web开发, 软件工程"><link rel="stylesheet" href="/assets/css/style.css"><link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/default.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js"></script></head><body><nav class="navbar"><div class="nav-container"><div class="nav-logo"><h2><i class="fas fa-snowflake"></i> Snowpeak</h2></div><div class="nav-menu"><a href="/" class="nav-link">首页</a><a href="/zh/page_1.htm" class="nav-link">文章</a><a href="/#tools" class="nav-link">工具</a><a href="/zh/about.htm" class="nav-link">关于</a><a href="/en/" class="nav-link lang-switch"><i class="fas fa-globe"></i> English</a></div><div class="nav-toggle" id="mobile-menu"><span class="bar"></span><span class="bar"></span><span class="bar"></span></div></div></nav><header class="article-header"><div class="container"><h1>ASP 动态包含文件的改进</h1><div class="article-meta"><span><i class="fas fa-calendar"></i> 发布时间: 2006-11-23 16:33:00</span><span><i class="fas fa-clock"></i> 阅读约需: 4 分钟 </span><span><i class="fas fa-tag"></i> 分类: 工具</span></div></div></header><main class="article-container"><p>ASP 本身不支持动态包含文件，现在的动态包含是通过 FSO 把被包含的文件合并到主文件里再运行。以下也有把形如 <code>&lt;!--#include file="filename.asp" --&gt;</code> 的普通包含文件方式称作“传统引用”，用函数实现的动态包含文件称作“动态引用”。常见的程序如下：</p> <pre><code class="language-asp">Function include(filename)
Dim re,content,fso,f,aspStart,aspEnd

set fso=CreateObject(&quot;Scripting.FileSystemObject&quot;)
set f=fso.OpenTextFile(server.mappath(filename))
content=f.ReadAll
f.close
set f=nothing
set fso=nothing

set re=new RegExp
re.pattern=&quot;^/s*=&quot;
aspEnd=1
aspStart=inStr(aspEnd,content,&quot;&lt;%&quot;)+2
do while aspStart&gt;aspEnd+1
Response.write Mid(content,aspEnd,aspStart-aspEnd-2)
aspEnd=inStr(aspStart,content,&quot;%/&gt;&quot;)+2
Execute(re.replace(Mid(content,aspStart,aspEnd-aspStart-2),&quot;Response.Write &quot;))
aspStart=inStr(aspEnd,content,&quot;&lt;%&quot;)+2
loop
Response.write Mid(content,aspEnd)
set re=nothing
End Function

使用范例：include(&quot;youinc.asp&quot;)
</code></pre> <p>以上范例引自 <a href="http://www.blueidea.com/tech/program/2003/101.asp">http://www.blueidea.com/tech/program/2003/101.asp</a></p><p>但这处函数在处理补包含的文件中还有包含文件时就不灵了。我在以上函数的基础上改进出来如下函数，在被包含文件中还有普通的包含文件 也可正常运行。</p> <pre><code class="language-asp">Function includeconvert(oRegExp, strFilename, strBlock)
Dim incStart, incEnd, match, oMatches, str, code
'用提取ASP代码的相同方式提取出include 部分的文件名，其余部分原样输出
code = &quot;&quot;
incEnd = 1
incStart = InStr(incEnd,strBlock,&quot;&lt;\--#，incStart是从&quot;)+3
oRegExp.pattern=&quot;(/w+)=&quot;&quot;([^&quot;&quot;]+)&quot;&quot;&quot; '匹配 file=&quot;filename.ext&quot; 或 virtual=&quot;virtualname.ext&quot;，捕捉类型及文件名两个子串
Set oMatches = oRegExp.Execute(Mid(strBlock,incStart,incEnd-incStart-3))
Set match = oMatches(0) '确定只有一组捕捉时，要得到这一组匹配的子串，可以这样做，省去用 For Each match In oMatches …… Next
code = code &amp; include(Mid(strFilename, 1, InStrRev(strFilename, &quot;/&quot;)) &amp; match.SubMatches(1)) 'Mid(filename, 1, InStrRev(filename, &quot;/&quot;)) 是在被引用的子文件名有路径时,把路径提取出来,加在子文件中传统引用的文件名前面,以找到正确的打开文件路径,因为动态引用时的文件路径是相对主文件而言的。要第二个匹配子串用SubMatches(1)
incStart = InStr(incEnd,strBlock,&quot;&lt;!--#include &quot;)+13
Loop
str = Mid(strBlock,incEnd)
str = Replace(str, &quot;&quot;&quot;&quot;, &quot;&quot;&quot;&quot;&quot;&quot;) '把单个双引号换成两个双引号
str = Replace(str, VbCr, &quot;&quot;)
str = Replace(str, VbLf, &quot;&quot;)
str = Replace(str, VbCrLf, &quot;&quot;)
code = code &amp; VbCrLf &amp; &quot;Response.Write &quot;&quot;&quot; &amp; str &amp; &quot;&quot;&quot;&quot;
includeconvert = code
End Function
Function include(filename)
Dim re, content, fso, f, aspStart, aspEnd, code
Set fso=CreateObject(&quot;scripting.FileSystemObject&quot;)
Set f=fso.OpenTextFile(Server.MapPath(filename))
content=f.ReadAll
f.close
Set f=nothing
Set fso=nothing

code = &quot;&quot;
aspEnd=1
aspStart=InStr(aspEnd,content,&quot;&lt;%&quot;)+2
Set re=new RegExp
Do While aspStart&gt;aspEnd+1
'传统引用&lt;!--#inclde 肯定是在ASP代码段以外的，所以先转。
code = code &amp; includeconvert (re, filename, Mid(content,aspEnd,aspStart-aspEnd-2))
aspEnd=InStr(aspStart,content,&quot;%/&gt;&quot;)+2
re.pattern=&quot;^/s*=&quot; '这段正则替换原来是把 &lt;% = str % &gt; 换回成标准的 &lt;%Response.Write str % &gt;
code = code &amp; VbCrLf &amp; re.replace(Mid(content,aspStart,aspEnd-aspStart-2),&quot;Response.Write &quot;) 'ASP块前面再加回车换行，以避免连接块之间多个 Response.Write在同一行的错误
aspStart=InStr(aspEnd,content,&quot;&lt;%&quot;)+2
Loop
code = code &amp; includeconvert (re, filename, Mid(content,aspEnd))
Set re=nothing
include = code
End Function
</code></pre> <p>方便起见，以上函数最终返回的是整合了包含文件的整个 ASP 代码，使用时还要再用 Execute 执行之，即使用时需要：Execute(include("file.asp"))。</p><p>以上函数对被包含文件与主文件同一路径时测试通过，未对被包含文件与主文件路径不同的情况做进一步容错，时间有限，欢迎有兴趣的朋友提出意见和改进。</p></main><footer class="footer"><div class="container"><div class="footer-content"><div class="footer-section"><h3><i class="fas fa-snowflake"></i> Snowpeak</h3><p>分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。</p><div class="social-links"><div class="social-platforms"><a href="https://github.com/xfsnow" target="_blank" class="social-link"><i class="fab fa-github"></i></a><a href="https://snowpeak.blog.csdn.net/" target="_blank" class="social-link"><i class="fas fa-blog"></i></a><a href="https://space.bilibili.com/701839928" target="_blank" class="social-link"><i class="fab fa-bilibili"></i></a><a href="https://www.linkedin.com/in/snowpeak" target="_blank" class="social-link"><i class="fab fa-linkedin"></i></a></div><div class="wechat-section"><div class="wechat-info"><span class="wechat-label">微信公众号</span><span class="wechat-name">技术温暖生活</span></div><img src="/assets/img/techwarm.jpg" alt="技术温暖生活" class="wechat-qr"></div></div></div><div class="footer-section"><h4>快速链接</h4><ul><li><a href="/#articles">文章</a></li><li><a href="/#tools">工具</a></li><li><a href="https://docs.github.com/en/pages" target="_blank">GitHub Pages</a></li></ul></div><div class="footer-section"><h4>技术栈</h4><ul><li>Python</li><li>GitHub Copilot</li><li>Claude Sonnet 4</li><li>HTML/CSS/JS</li><li>响应式设计</li></ul></div></div><div class="footer-bottom"><p>Copyright &copy; 2013-<script>document.write((new Date()).getFullYear());</script> 雪峰博客。运行在 GitHub Pages 上。 <a href="https://beian.miit.gov.cn" target="_blank" class="icp_beian">京ICP备2021007720号</a><a href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010502052523" target="_blank" class="gongan_beian">京公网安备11010502052523号</a></p></div></div></footer><script src="/zh/index.js"></script><script src="/assets/js/blog.js"></script><script>hljs.highlightAll();</script></body></html>