<!DOCTYPE html><html lang="zh"><head><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1"><title>雪峰博客</title><meta name="description" content="分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。"><meta name="keywords" content="AI, GitHub Copilot, Azure云, 云计算, 前端技术, 后端技术, Web开发, 软件工程"><link rel="stylesheet" href="/assets/css/style.min.css"><link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css"><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/styles/default.min.css"><script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.11.1/highlight.min.js"></script></head><body><nav class="navbar"><div class="nav-container"><div class="nav-logo"><h2><i class="fas fa-snowflake"></i> Snowpeak</h2></div><div class="nav-menu"><a href="/" class="nav-link">首页</a><a href="/zh/page_1.htm" class="nav-link">文章</a><a href="/#tools" class="nav-link">工具</a><a href="/zh/about.htm" class="nav-link">关于</a><a href="/en/" class="nav-link lang-switch"><i class="fas fa-globe"></i> English</a></div><div class="nav-toggle" id="mobile-menu"><span class="bar"></span><span class="bar"></span><span class="bar"></span></div></div></nav><header class="article-header"><div class="container"><h1>Azure DevOps流水线合并多个源码库（三）</h1><div class="article-meta"><span><i class="fas fa-calendar"></i> 发布时间: 2021-06-11 10:00:00</span><span><i class="fas fa-clock"></i> 阅读约需: 2 分钟 </span><span><i class="fas fa-tag"></i> 分类: Azure</span></div></div></header><main class="article-container"><h2>引入第2个源码库</h2><p>我们回到YAML文件编辑界面，在文件开头的 <code>trigger: - master</code> 这一行下面加上如下这段：</p> <pre><code class="language-yaml">resources:
  repositories:
    - repository: Angular
      name: &lt;YourProjectName&gt;/ASP_Angular
      type: git
      ref: main
</code></pre> <p>这里 <code>repository: Angular</code> 是给这个引用的源码库起一个代号，后面可以简单地调用它。</p><p><code>name: &lt;YourProjectName&gt;/ASP_Angular</code> 则是"项目名/库名"的格式。</p><p><code>ref: main</code> 声明使用的是main分支。</p><p>然后在 steps: 后面加上</p> <pre><code class="language-yaml">- checkout: Angular
  displayName: 'checkout Angular'
- checkout: self
  displayName: 'checkout Backend'
</code></pre> <p>任务意思是签出前端库。因为引入了第2个源码库，所以当前库自身也要加一个任务 <code>- checkout: self</code> 来签出。保存后再执行时，因为在当前流水线要调用其它源码库，首次运行会弹出提示需要权限。</p><p><img alt="Graphical user interface, application Description automatically generated" src="../assets/img/20210611_Azure_DevOps_Pipeline_3_01.png"></p><p>点击 View 按钮。</p><p><img alt="Graphical user interface, text, application Description automatically generated" src="../assets/img/20210611_Azure_DevOps_Pipeline_3_02.png"></p><p>在弹出的浮层再点"Permit"按钮即可。这个权限许可只在首次添加任务时需要操作，以后就不会再弹出了。</p><p>这次执行大概率会失败。</p><p><img alt="Graphical user interface, text, application Description automatically generated" src="../assets/img/20210611_Azure_DevOps_Pipeline_3_03.png"></p><p>我们点击这个错误消息，会直接跳转到具体的报错日志那里。</p><p><img alt="Graphical user interface, text Description automatically generated" src="../assets/img/20210611_Azure_DevOps_Pipeline_3_04.png"></p><p>之前可以正常运行的 ASP 构建任务，现在不灵了。我们把之前由向导生成的构建的任务。</p> <pre><code class="language-yaml">- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
</code></pre> <p>替换成下面这样的。</p> <pre><code class="language-yaml">- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'
</code></pre> <p>再保存运行就正常了。我们在作业运行详情页点击绿色对勾的Job链接，可以看到日志中签出前端库的后端库的任务都完成了，还可以点击每个任务名称，再查看详细的日志。</p><p><img alt="Text Description automatically generated" src="../assets/img/20210611_Azure_DevOps_Pipeline_3_05.png"></p><p>注意这里前端项目签出的日志中有一行</p> <pre><code class="language-bash">git init \&quot;/home/vsts/work/1/s/ASP_Angular\&quot;
</code></pre> <p>这表示在流水线执行的容器里前端代码签出时保存在本地的路径，我们记下这个路径，后续添加构建任务时需要用到。</p></main><footer class="footer"><div class="container"><div class="footer-content"><div class="footer-section"><h3><i class="fas fa-snowflake"></i> Snowpeak</h3><p>分享AI和云计算技术的最新动态与实践经验，以及其它有趣的话题。</p><div class="social-links"><div class="social-platforms"><a href="https://github.com/xfsnow" target="_blank" class="social-link"><i class="fab fa-github"></i></a><a href="https://snowpeak.blog.csdn.net/" target="_blank" class="social-link"><i class="fas fa-blog"></i></a><a href="https://space.bilibili.com/701839928" target="_blank" class="social-link"><i class="fab fa-bilibili"></i></a><a href="https://www.linkedin.com/in/snowpeak" target="_blank" class="social-link"><i class="fab fa-linkedin"></i></a></div><div class="wechat-section"><div class="wechat-info"><span class="wechat-label">微信公众号</span><span class="wechat-name">技术温暖生活</span></div><img src="/assets/img/techwarm.jpg" alt="技术温暖生活" class="wechat-qr"></div></div></div><div class="footer-section"><h4>快速链接</h4><ul><li><a href="/#articles">文章</a></li><li><a href="/#tools">工具</a></li><li><a href="https://docs.github.com/en/pages" target="_blank">GitHub Pages</a></li></ul></div><div class="footer-section"><h4>技术栈</h4><ul><li>Python</li><li>GitHub Copilot</li><li>Claude Sonnet 4</li><li>HTML/CSS/JS</li><li>响应式设计</li></ul></div></div><div class="footer-bottom"><p>Copyright &copy; 2013-<script>document.write((new Date()).getFullYear());</script> 雪峰博客。运行在 GitHub Pages 上。 <a href="https://beian.miit.gov.cn" target="_blank" class="icp_beian">京ICP备2021007720号</a><a href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010502052523" target="_blank" class="gongan_beian">京公网安备11010502052523号</a></p></div></div></footer><script src="/zh/index.js"></script><script src="/assets/js/blog.min.js"></script><script>hljs.highlightAll();</script></body></html>