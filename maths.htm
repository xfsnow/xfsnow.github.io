<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Snowpeak Tech Blog - AI与云计算技术分享</title>
    <meta name="description" content="专注于AI、云计算、GitHub Copilot等前沿技术的分享与探讨">
    <link rel="stylesheet" href="assets/css/style.css">
    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.7.2/css/all.css">
    <!-- MathJax for LaTeX rendering -->
    <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
    <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
    <script>
        window.MathJax = {
            tex: {
                inlineMath: [['\\(', '\\)'], ['$', '$']],
                displayMath: [['\\[', '\\]'], ['$$', '$$']],
                processEscapes: true,
                processEnvironments: true
            },
            options: {
                skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre'],
                ignoreHtmlClass: 'tex2jax_ignore'
            }
        };
    </script>
    <style>
        .math-title {
            color: #2563eb;
            border-bottom: 2px solid #2563eb;
            padding-bottom: 10px;
            margin-top: 20px;
        }
        .math-section {
            color: #1e40af;
            margin-top: 25px;
            margin-bottom: 15px;
        }
        .math-subsection {
            color: #3730a3;
            margin-top: 20px;
            margin-bottom: 10px;
        }
        .math-step {
            margin: 15px 0;
            padding: 10px;
            background-color: #f8fafc;
            border-left: 4px solid #3b82f6;
            border-radius: 4px;
        }
        #latexInput {
            width: 100%;
            max-width: 800px;
            height: 200px;
            padding: 10px;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            font-family: 'Consolas', 'Monaco', monospace;
            font-size: 14px;
            line-height: 1.5;
            resize: vertical;
        }
        #convertButton {
            margin: 10px 0;
            padding: 8px 20px;
            background-color: #3b82f6;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
        }
        #convertButton:hover {
            background-color: #2563eb;
        }
        #htmlOutput {
            border: 1px solid #d1d5db;
            padding: 20px;
            margin-top: 10px;
            border-radius: 6px;
            background-color: #ffffff;
            max-width: 800px;
            line-height: 1.6;
        }
        #htmlOutput p {
            margin: 10px 0;
        }
        #htmlOutput .MathJax {
            display: inline-block;
        }
        
        /* 数学题库系统样式 */
        .math-bank-container {
            max-width: 900px;
            margin: 30px auto;
            padding: 20px;
        }
        
        .question-card {
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            margin: 20px 0;
            background: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .question-header {
            background: #f8fafc;
            padding: 15px 20px;
            border-bottom: 1px solid #e5e7eb;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .question-title {
            font-weight: bold;
            color: #374151;
            margin: 0;
        }
        
        .question-meta {
            font-size: 12px;
            color: #6b7280;
        }
        
        .question-content {
            padding: 20px;
        }
        
        .question-body {
            margin-bottom: 20px;
            line-height: 1.6;
        }
        
        .answer-section {
            border-top: 1px solid #f3f4f6;
            padding-top: 15px;
            margin-top: 15px;
            display: none;
        }
        
        .answer-section.show {
            display: block;
        }
        
        .answer-space {
            min-height: 100px;
            border: 1px dashed #d1d5db;
            border-radius: 4px;
            background: #fafafa;
            margin: 15px 0;
            position: relative;
        }
        
        .answer-space::after {
            content: "答题区域";
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: #9ca3af;
            font-size: 14px;
        }
        
        .control-buttons {
            text-align: center;
            margin: 20px 0;
        }
        
        .btn {
            padding: 8px 16px;
            margin: 0 5px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        
        .btn-primary {
            background-color: #3b82f6;
            color: white;
        }
        
        .btn-primary:hover {
            background-color: #2563eb;
        }
        
        .btn-success {
            background-color: #10b981;
            color: white;
        }
        
        .btn-success:hover {
            background-color: #059669;
        }
        
        .btn-warning {
            background-color: #f59e0b;
            color: white;
        }
        
        .btn-warning:hover {
            background-color: #d97706;
        }
        
        .btn-danger {
            background-color: #ef4444;
            color: white;
        }
        
        .btn-danger:hover {
            background-color: #dc2626;
        }
        
        .question-input-area {
            background: #f9fafb;
            padding: 20px;
            border-radius: 8px;
            margin: 20px 0;
        }
        
        .input-group {
            margin: 15px 0;
        }
        
        .input-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: #374151;
        }
        
        .input-group input,
        .input-group textarea,
        .input-group select {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #d1d5db;
            border-radius: 4px;
            font-size: 14px;
        }
        
        .input-group textarea {
            resize: vertical;
            min-height: 80px;
            font-family: 'Consolas', 'Monaco', monospace;
        }
        
        /* 打印样式 */
        @media print {
            .navbar, .control-buttons, .question-input-area {
                display: none !important;
            }
            
            .answer-section {
                display: none !important;
            }
            
            .answer-space {
                min-height: 150px;
                background: white !important;
                border: 1px solid #000 !important;
            }
            
            .answer-space::after {
                display: none;
            }
            
            .question-card {
                break-inside: avoid;
                page-break-inside: avoid;
                margin: 20px 0;
                box-shadow: none;
                border: 1px solid #000;
            }
            
            body {
                font-size: 12pt;
                line-height: 1.4;
            }
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-logo">
                <a href="index.html" style="text-decoration: none;"><h2><i class="fas fa-snowflake"></i> Snowpeak</h2></a>
            </div>
            <div class="nav-menu">
                <a href="index.html#home" class="nav-link">首页</a>
                <a href="index.html#articles" class="nav-link">文章</a>
                <a href="index.html#tools" class="nav-link">工具</a>
                <a href="index.html#about" class="nav-link">关于</a>
            </div>
            <div class="nav-toggle" id="mobile-menu">
                <span class="bar"></span>
                <span class="bar"></span>
                <span class="bar"></span>
            </div>
        </div>
    </nav>
    <header class="article-header">
        <div class="container">
            <h1>数学计算演练</h1>
            <div class="article-meta">
                <span><i class="fas fa-calendar"></i> 2024年1月15日</span>
                <span><i class="fas fa-clock"></i> 阅读时间 5分钟</span>
                <span><i class="fas fa-tag"></i> AI技术</span>
                <span><i class="fas fa-user"></i> Snowpeak</span>
            </div>
        </div>
    </header>
    <!-- 数学计算保留（隐藏） -->
    <div >
        <script>
            var maxPrimeNumber = function(n) {
                if (n < 2) return 0;
                var isPrime = new Array(n + 1).fill(true);
                isPrime[0] = isPrime[1] = false;
                for (var i = 2; i * i <= n; i++) {
                    if (isPrime[i]) {
                        for (var j = i * i; j <= n; j += i) {
                            isPrime[j] = false;
                        }
                    }
                }
                for (var k = n; k >= 2; k--) {
                    if (isPrime[k]) return k;
                }
                return -1;
            };
            document.write('100000以内最大质数是' + maxPrimeNumber(100000));
        </script>
    </div>
<div>
<h2>LaTex转HTML</h2>
<div style="margin-bottom: 10px;">
    <button id="loadExampleButton" style="padding: 6px 12px; background-color: #10b981; color: white; border: none; border-radius: 4px; cursor: pointer; margin-right: 10px;">
        加载示例
    </button>
    <button id="clearButton" style="padding: 6px 12px; background-color: #ef4444; color: white; border: none; border-radius: 4px; cursor: pointer;">
        清空
    </button>
</div>
<textarea id="latexInput" rows="4" cols="50" placeholder="在此输入包含LaTeX数学公式的文本，支持Markdown格式"></textarea>
<button id="convertButton">转换</button>
<div id="htmlOutput" style="border: 1px solid #ddd; padding: 10px; margin-top: 10px;"></div>
<script>
    document.getElementById('convertButton').addEventListener('click', function() {
        var latexCode = document.getElementById('latexInput').value;
        var htmlOutput = document.getElementById('htmlOutput');
        
        // 转换LaTeX到HTML
        htmlOutput.innerHTML = convertLatexToHTML(latexCode);
        
        // 重新渲染MathJax
        if (window.MathJax) {
            MathJax.typesetPromise([htmlOutput]).then(() => {
                console.log('MathJax rendering completed');
            }).catch((err) => {
                console.error('MathJax rendering error:', err);
            });
        }
    });

    // 加载示例按钮
    document.getElementById('loadExampleButton').addEventListener('click', function() {
        var exampleText = `# 💡解答
## 分析
本题主要涉及三角形全等的判定与性质以及三角形内角和定理。通过证明三角形全等得到对应角相等，再利用三角形内角和定理求出所求角的度数。

## 详解
1. **证明\\(\\triangle CAD\\cong\\triangle EAB\\)**

因为\\(\\angle BAD = \\angle CAE=\\alpha\\)，所以\\(\\angle BAD+\\angle BAC=\\angle CAE+\\angle BAC\\)，即\\(\\angle CAD=\\angle EAB\\)。

又因为\\(AB = AD\\)，\\(AC = AE\\)，根据"边角边"（SAS）判定定理，可得\\(\\triangle CAD\\cong\\triangle EAB\\)。

2. **求\\(\\angle DFE\\)的度数（当\\(\\alpha = 40^{\\circ}\\)时）**

由\\(\\triangle CAD\\cong\\triangle EAB\\)，可得\\(\\angle ADC=\\angle ABE\\)。

在\\(\\triangle AOD\\)和\\(\\triangle BOF\\)中（设\\(AD\\)与\\(BE\\)交于点\\(O\\)），\\(\\angle AOD=\\angle BOF\\)（对顶角相等）。

根据三角形内角和定理，\\(\\angle DFE = 180^{\\circ}-(\\angle FDB+\\angle FBD)\\)。

因为\\(\\angle ADC=\\angle ABE\\)，所以\\(\\angle DFE = 180^{\\circ}-(\\angle ADB+\\angle ABD)\\)。

在\\(\\triangle ABD\\)中，\\(AB = AD\\)，\\(\\angle BAD = 40^{\\circ}\\)，则\\(\\angle ADB=\\angle ABD=\\frac{1}{2}(180^{\\circ}-\\angle BAD)=\\frac{1}{2}(180 - 40)^{\\circ}=70^{\\circ}\\)。

所以\\(\\angle DFE=180^{\\circ}-70^{\\circ}-70^{\\circ}=40^{\\circ}\\)。

3. **求\\(\\angle DFE\\)的度数（用含\\(\\alpha\\)的式子表示）**

同样由\\(\\triangle CAD\\cong\\triangle EAB\\)，\\(\\angle ADC=\\angle ABE\\)。

在\\(\\triangle AOD\\)和\\(\\triangle BOF\\)中，\\(\\angle AOD=\\angle BOF\\)。

\\(\\angle DFE = 180^{\\circ}-(\\angle FDB+\\angle FBD)=180^{\\circ}-(\\angle ADB+\\angle ABD)\\)。

在\\(\\triangle ABD\\)中，\\(AB = AD\\)，\\(\\angle BAD=\\alpha\\)，则\\(\\angle ADB=\\angle ABD=\\frac{1}{2}(180^{\\circ}-\\angle BAD)=\\frac{1}{2}(180 - \\alpha)^{\\circ}\\)。

所以\\(\\angle DFE = 180^{\\circ}-\\frac{1}{2}(180 - \\alpha)^{\\circ}-\\frac{1}{2}(180 - \\alpha)^{\\circ}=\\alpha\\)。

## 总结
(1) 当\\(\\alpha = 40^{\\circ}\\)时，\\(\\angle DFE\\)的度数为\\(40^{\\circ}\\)；
(2) 用含\\(\\alpha\\)的式子表示\\(\\angle DFE\\)的度数为\\(\\alpha\\)。`;
        
        document.getElementById('latexInput').value = exampleText;
    });

    // 清空按钮
    document.getElementById('clearButton').addEventListener('click', function() {
        document.getElementById('latexInput').value = '';
        document.getElementById('htmlOutput').innerHTML = '';
    });

    function convertLatexToHTML(latex) {
        // 完善的LaTeX到HTML转换函数
        let html = latex;
        
        // 1. 处理Markdown标题
        html = html.replace(/^# (.*$)/gm, '<h1>$1</h1>');
        html = html.replace(/^## (.*$)/gm, '<h2>$1</h2>');
        html = html.replace(/^### (.*$)/gm, '<h3>$1</h3>');
        
        // 2. 处理粗体文字
        html = html.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
        
        // 3. 处理段落 - 将连续的非空行作为段落
        html = html.replace(/\n\n+/g, '</p><p>');
        html = '<p>' + html + '</p>';
        
        // 4. 处理换行
        html = html.replace(/\n/g, '<br>');
        
        // 5. 清理空段落
        html = html.replace(/<p><\/p>/g, '');
        html = html.replace(/<p>\s*<\/p>/g, '');
        
        // 6. 处理列表项 - 数字列表
        html = html.replace(/(\d+)\.\s\*\*(.*?)\*\*/g, '<div class="math-step"><strong>$1. $2</strong></div>');
        
        // 7. 处理特殊格式的角度符号
        html = html.replace(/(\d+)\^\\circ/g, '$1°');
        
        // 8. 确保LaTeX数学公式被正确包裹
        // 处理行内公式 \(...\)
        html = html.replace(/\\?\\\((.*?)\\?\\\)/g, '\\($1\\)');
        
        // 处理显示公式 \[...\]
        html = html.replace(/\\?\\\[(.*?)\\?\\\]/g, '\\[$1\\]');
        
        // 9. 处理一些常见的LaTeX符号替换（作为后备）
        const latexReplacements = {
            '\\alpha': 'α',
            '\\beta': 'β',
            '\\gamma': 'γ',
            '\\delta': 'δ',
            '\\epsilon': 'ε',
            '\\theta': 'θ',
            '\\lambda': 'λ',
            '\\mu': 'μ',
            '\\pi': 'π',
            '\\sigma': 'σ',
            '\\phi': 'φ',
            '\\omega': 'ω',
            '\\Delta': 'Δ',
            '\\Gamma': 'Γ',
            '\\Lambda': 'Λ',
            '\\Omega': 'Ω',
            '\\Phi': 'Φ',
            '\\Psi': 'Ψ',
            '\\infty': '∞',
            '\\pm': '±',
            '\\mp': '∓',
            '\\times': '×',
            '\\div': '÷',
            '\\leq': '≤',
            '\\geq': '≥',
            '\\neq': '≠',
            '\\approx': '≈',
            '\\equiv': '≡',
            '\\subset': '⊂',
            '\\supset': '⊃',
            '\\subseteq': '⊆',
            '\\supseteq': '⊇',
            '\\in': '∈',
            '\\notin': '∉',
            '\\cup': '∪',
            '\\cap': '∩',
            '\\emptyset': '∅',
            '\\forall': '∀',
            '\\exists': '∃',
            '\\nabla': '∇',
            '\\partial': '∂',
            '\\sum': '∑',
            '\\prod': '∏',
            '\\int': '∫',
            '\\oint': '∮',
            '\\sqrt': '√',
            '\\cdot': '·',
            '\\bullet': '•',
            '\\circ': '°'
        };
        
        // 应用符号替换（仅在非公式区域）
        for (let latex in latexReplacements) {
            // 避免替换已经在公式环境中的内容
            html = html.replace(new RegExp(latex.replace(/\\/g, '\\\\'), 'g'), function(match, offset, string) {
                // 检查是否在数学公式环境中
                let beforeMatch = string.substring(0, offset);
                let afterMatch = string.substring(offset);
                
                // 简单检查：如果在 \( ... \) 或 \[ ... \] 中，不替换
                let inInlineMath = (beforeMatch.lastIndexOf('\\(') > beforeMatch.lastIndexOf('\\)'));
                let inDisplayMath = (beforeMatch.lastIndexOf('\\[') > beforeMatch.lastIndexOf('\\]'));
                
                if (inInlineMath || inDisplayMath) {
                    return match; // 保持原样
                }
                
                return latexReplacements[latex];
            });
        }
        
        // 10. 添加数学样式类
        html = html.replace(/<h1>/g, '<h1 class="math-title">');
        html = html.replace(/<h2>/g, '<h2 class="math-section">');
        html = html.replace(/<h3>/g, '<h3 class="math-subsection">');
        
        return html;
    }
</script>

<!-- 数学题库系统 -->
<div class="math-bank-container">
    <h2>📚 数学题库系统</h2>
    
    <!-- 控制按钮 -->
    <div class="control-buttons">
        <button class="btn btn-primary" onclick="toggleAnswers()">
            <i class="fas fa-eye"></i> 切换答案显示
        </button>
        <button class="btn btn-success" onclick="printQuestions()">
            <i class="fas fa-print"></i> 打印题目
        </button>
        <button class="btn btn-warning" onclick="toggleAddQuestion()">
            <i class="fas fa-plus"></i> 添加题目
        </button>
        <button class="btn btn-danger" onclick="clearAllQuestions()">
            <i class="fas fa-trash"></i> 清空题库
        </button>
        <button class="btn btn-primary" onclick="loadSampleQuestions()">
            <i class="fas fa-download"></i> 加载示例题目
        </button>
    </div>

    <!-- 添加题目区域 -->
    <div id="addQuestionArea" class="question-input-area" style="display: none;">
        <h3>添加新题目</h3>
        <div class="input-group">
            <label for="questionTitle">题目标题：</label>
            <input type="text" id="questionTitle" placeholder="例如：三角形全等证明题">
        </div>
        <div class="input-group">
            <label for="questionCategory">题目分类：</label>
            <select id="questionCategory">
                <option value="geometry">几何</option>
                <option value="algebra">代数</option>
                <option value="calculus">微积分</option>
                <option value="probability">概率统计</option>
                <option value="other">其他</option>
            </select>
        </div>
        <div class="input-group">
            <label for="questionDifficulty">难度等级：</label>
            <select id="questionDifficulty">
                <option value="easy">简单</option>
                <option value="medium">中等</option>
                <option value="hard">困难</option>
            </select>
        </div>
        <div class="input-group">
            <label for="questionContent">题目内容（支持LaTeX）：</label>
            <textarea id="questionContent" placeholder="输入题目内容，可以使用LaTeX公式，例如：\\(\\alpha = 40^{\\circ}\\)"></textarea>
        </div>
        <div class="input-group">
            <label for="questionAnswer">题目答案（支持LaTeX）：</label>
            <textarea id="questionAnswer" placeholder="输入详细解答过程"></textarea>
        </div>
        <div class="control-buttons">
            <button class="btn btn-success" onclick="addQuestion()">
                <i class="fas fa-save"></i> 保存题目
            </button>
            <button class="btn btn-danger" onclick="cancelAddQuestion()">
                <i class="fas fa-times"></i> 取消
            </button>
        </div>
    </div>

    <!-- 题目列表容器 -->
    <div id="questionsContainer">
        <!-- 题目将动态插入到这里 -->
    </div>
</div>

<script>
// 数学题库数据存储
let mathQuestions = [];
let showAnswers = false;

// 从localStorage加载题目
function loadQuestions() {
    const saved = localStorage.getItem('mathQuestions');
    if (saved) {
        mathQuestions = JSON.parse(saved);
        renderQuestions();
    }
}

// 保存题目到localStorage
function saveQuestions() {
    localStorage.setItem('mathQuestions', JSON.stringify(mathQuestions));
}

// 渲染所有题目
function renderQuestions() {
    const container = document.getElementById('questionsContainer');
    container.innerHTML = '';
    
    mathQuestions.forEach((question, index) => {
        const questionCard = createQuestionCard(question, index);
        container.appendChild(questionCard);
    });
    
    // 重新渲染MathJax
    if (window.MathJax) {
        MathJax.typesetPromise([container]);
    }
}

// 创建题目卡片
function createQuestionCard(question, index) {
    const card = document.createElement('div');
    card.className = 'question-card';
    card.innerHTML = `
        <div class="question-header">
            <div>
                <h4 class="question-title">${question.title}</h4>
                <div class="question-meta">
                    分类: ${getCategoryName(question.category)} | 
                    难度: ${getDifficultyName(question.difficulty)} | 
                    创建时间: ${question.createTime}
                </div>
            </div>
            <button class="btn btn-danger" onclick="deleteQuestion(${index})" style="font-size: 12px; padding: 4px 8px;">
                <i class="fas fa-trash"></i>
            </button>
        </div>
        <div class="question-content">
            <div class="question-body">
                ${convertLatexToHTML(question.content)}
            </div>
            <div class="answer-space"></div>
            <div class="answer-section ${showAnswers ? 'show' : ''}">
                <h5 style="color: #059669; margin-bottom: 10px;">
                    <i class="fas fa-lightbulb"></i> 参考答案：
                </h5>
                ${convertLatexToHTML(question.answer)}
            </div>
        </div>
    `;
    return card;
}

// 获取分类名称
function getCategoryName(category) {
    const names = {
        'geometry': '几何',
        'algebra': '代数', 
        'calculus': '微积分',
        'probability': '概率统计',
        'other': '其他'
    };
    return names[category] || category;
}

// 获取难度名称
function getDifficultyName(difficulty) {
    const names = {
        'easy': '简单',
        'medium': '中等',
        'hard': '困难'
    };
    return names[difficulty] || difficulty;
}

// 切换答案显示
function toggleAnswers() {
    showAnswers = !showAnswers;
    const answerSections = document.querySelectorAll('.answer-section');
    answerSections.forEach(section => {
        if (showAnswers) {
            section.classList.add('show');
        } else {
            section.classList.remove('show');
        }
    });
}

// 打印题目
function printQuestions() {
    window.print();
}

// 切换添加题目区域
function toggleAddQuestion() {
    const area = document.getElementById('addQuestionArea');
    area.style.display = area.style.display === 'none' ? 'block' : 'none';
}

// 取消添加题目
function cancelAddQuestion() {
    document.getElementById('addQuestionArea').style.display = 'none';
    clearAddQuestionForm();
}

// 清空添加题目表单
function clearAddQuestionForm() {
    document.getElementById('questionTitle').value = '';
    document.getElementById('questionContent').value = '';
    document.getElementById('questionAnswer').value = '';
    document.getElementById('questionCategory').value = 'geometry';
    document.getElementById('questionDifficulty').value = 'medium';
}

// 添加题目
function addQuestion() {
    const title = document.getElementById('questionTitle').value.trim();
    const content = document.getElementById('questionContent').value.trim();
    const answer = document.getElementById('questionAnswer').value.trim();
    const category = document.getElementById('questionCategory').value;
    const difficulty = document.getElementById('questionDifficulty').value;
    
    if (!title || !content || !answer) {
        alert('请填写完整的题目信息！');
        return;
    }
    
    const question = {
        id: Date.now(),
        title: title,
        content: content,
        answer: answer,
        category: category,
        difficulty: difficulty,
        createTime: new Date().toLocaleDateString()
    };
    
    mathQuestions.push(question);
    saveQuestions();
    renderQuestions();
    cancelAddQuestion();
    
    alert('题目添加成功！');
}

// 删除题目
function deleteQuestion(index) {
    if (confirm('确定要删除这道题目吗？')) {
        mathQuestions.splice(index, 1);
        saveQuestions();
        renderQuestions();
    }
}

// 清空所有题目
function clearAllQuestions() {
    if (confirm('确定要清空所有题目吗？此操作不可恢复！')) {
        mathQuestions = [];
        saveQuestions();
        renderQuestions();
    }
}

// 加载示例题目
function loadSampleQuestions() {
    const sampleQuestions = [
        {
            id: 1,
            title: "三角形全等证明题",
            category: "geometry",
            difficulty: "medium",
            createTime: "2024-01-15",
            content: `已知：在\\(\\triangle ABC\\)中，\\(AB = AC\\)，\\(D\\)是\\(BC\\)的中点，\\(E\\)是\\(AC\\)上一点。

求证：\\(\\triangle ABD \\cong \\triangle ACD\\)

如果\\(\\angle BAC = 60^{\\circ}\\)，求\\(\\angle ABC\\)的度数。`,
            answer: `## 证明过程

**第一步：证明\\(\\triangle ABD \\cong \\triangle ACD\\)**

因为：
- \\(AB = AC\\)（已知）
- \\(AD = AD\\)（公共边）  
- \\(BD = CD\\)（\\(D\\)是\\(BC\\)中点）

所以根据SSS判定定理，\\(\\triangle ABD \\cong \\triangle ACD\\)

**第二步：求\\(\\angle ABC\\)的度数**

因为\\(AB = AC\\)，所以\\(\\triangle ABC\\)是等腰三角形

在等腰三角形中，\\(\\angle ABC = \\angle ACB\\)

由三角形内角和定理：
\\(\\angle BAC + \\angle ABC + \\angle ACB = 180^{\\circ}\\)

代入已知条件：
\\(60^{\\circ} + 2\\angle ABC = 180^{\\circ}\\)

解得：\\(\\angle ABC = 60^{\\circ}\\)

因此\\(\\triangle ABC\\)是等边三角形。`
        },
        {
            id: 2,
            title: "二次函数的性质",
            category: "algebra", 
            difficulty: "easy",
            createTime: "2024-01-15",
            content: `已知二次函数\\(f(x) = ax^2 + bx + c\\)的图像经过点\\((0, 3)\\)，\\((1, 2)\\)，\\((2, 5)\\)。

1. 求函数解析式
2. 求函数的对称轴和顶点坐标
3. 求函数的最小值`,
            answer: `## 解答

**1. 求函数解析式**

将三个点代入函数式：
- \\(f(0) = c = 3\\)
- \\(f(1) = a + b + c = 2\\)
- \\(f(2) = 4a + 2b + c = 5\\)

解方程组：
- \\(c = 3\\)
- \\(a + b = -1\\)
- \\(4a + 2b = 2\\)

解得：\\(a = 2\\)，\\(b = -3\\)，\\(c = 3\\)

所以\\(f(x) = 2x^2 - 3x + 3\\)

**2. 对称轴和顶点坐标**

对称轴：\\(x = -\\frac{b}{2a} = \\frac{3}{4}\\)

顶点坐标：\\((\\frac{3}{4}, f(\\frac{3}{4})) = (\\frac{3}{4}, \\frac{15}{8})\\)

**3. 最小值**

因为\\(a = 2 > 0\\)，抛物线开口向上，所以最小值为\\(\\frac{15}{8}\\)`
        }
    ];
    
    mathQuestions = [...mathQuestions, ...sampleQuestions];
    saveQuestions();
    renderQuestions();
    alert('示例题目加载成功！');
}

// 页面加载时初始化
document.addEventListener('DOMContentLoaded', function() {
    loadQuestions();
});
</script>
</body>
</html>